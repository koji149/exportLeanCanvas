{"version":3,"sources":["components/Header.js","components/ForDesktop/LeanCanvasForDesktop.js","components/FinishModal.js","components/CircularIndeterminate.js","components/CustomizedProgressBars.js","components/PreparationModal.js","components/ErrorArrivedModal.js","utilty/randomQuote.js","components/DownLoadSpredSheetButton.js","components/AllTextClearButton.js","components/ForDesktop/ButtonGroupForDesktop.js","components/ForLaptop/LeanCanvasForLaptop.js","components/ForLaptop/ButtonGroupForLaptop.js","components/ForTablet/TextClearButtonForTablet.js","components/ForTablet/LeanCanvasForTablet.js","components/ForTablet/DownLoadSpredSheetButtonForTabet.js","components/ForTablet/ButtonGroupForTablet.js","components/ForMobile/TextClearButtonForMobile.js","components/ForMobile/LeanCanvasForMobile.js","components/ForMobile/DownLoadSpredSheetButtonForMobile.js","components/ForMobile/ButtonGroupForMobile.js","contexts/AppContext.js","actions/index.js","components/Main.js","components/Footer.js","pages/Page404.js","pages/PrivacyPolicy.js","pages/TermsOfService.js","reducers/LeanCanvasContentReducer.js","reducers/index.js","components/App.js","index.js"],"names":["useStyles","makeStyles","logo","background","border","boxShadow","color","position","width","Header","classes","AppBar","className","Toolbar","Typography","variant","to","style","textDecoration","root","flex","container","marginTop","marginBottom","marginLeft","marginRight","display","flexDirection","containerTopRatio","topContent","justifyContent","alignItems","gridItemTwoVertical","gridItemOnlyOne","containerBottomRatio","gridItemTwoRow","toolTipSmall","zIndex","top","right","toolTipMedium","toolTipLarge","useStylesFormSmall","theme","borderTop","borderBottom","borderLeft","borderRight","overflow","borderRadius","backgroundColor","transition","transitions","create","borderColor","boxshadow","fade","palette","primary","main","focused","useStylesFormMedium","FormTextField","formType","props","FormMedium","FormSmall","TextField","InputProps","disableUnderline","LeanCanvasForDesktop","problem","setProblem","alternatives","setAlternatives","customer","setCustomer","earlyAdopters","setEarlyAdopters","uniqueValue","setUniqueValue","solution","setSolution","channels","setChannels","revenue","setRevenue","cost","setCost","keyMetrics","setKeyMetrics","unfairAdvantage","setUnfairAdvantage","PLOBLEM_KEY","ALTERNATIVES_KEY","CUSTOMER_KEY","EARLYADOPTERS_KEY","UNIQUEVALUE_KEY","SOLUTION_KEY","CHANNELS_KEY","REVENUE_KEY","COST_KEY","KEYMETRICS_KEY","UNFAIRADVANTAGE_KEY","initValue","key","dispatch","initVal","sessionStorage","getItem","JSON","parse","useEffect","mounted","useRef","current","stringify","Box","Paper","elevation","Grid","item","xs","Tooltip","title","placement","label","id","multiline","rows","fullWidth","value","onChange","e","target","margin","CancelButton","withStyles","getContrastText","Button","FinishModal","openFinishModal","handleCloseFinishModal","spredSheetUrl","Dialog","open","onClose","aria-labelledby","aria-describedby","textAlign","alignContent","DialogTitle","paddingTop","fontWeight","m","DialogContent","href","startIcon","paddingBottom","onClick","spacing","CircularIndeterminate","CircularProgress","flexGrow","CustomizedProgressBars","setOpenPreparationModal","setOpenFinishModal","setOpenErrorArrivedModal","isArrivedUrl","setIsArrivedUrl","isNotArrivedUrl","setIsNotArrivedUrl","setTimeout","PreparationModal","openPreparationModal","handleClosePreparationModal","quote","byName","fontSize","ErrorArrivedModal","openErrorArrivedModal","handleCloseErrorArrivedModal","require","config","REACT_APP_TWITTER_URL","process","quotes","name","SpredSheetButton","DownLoadSpredSheetButton","createLeanCanvas","useState","setQuote","setByName","randomQuote","Math","floor","random","length","displayRandomQuotesAndName","size","AllTextClearButton","allTextClear","arrow","Fab","buttonGroup","button","ButtonGroupForDesktop","LeanCanvasForLaptop","ButtonGroupForLaptop","fab","padding","TextClearButtonForTablet","IconButton","aria-label","glidItemsHorizontal","glidItem","useStylesForm","LeanCanvasForTablet","textClear","paper","height","icon","DownLoadSpredSheetButtonForTabet","bottom","ButtonGroupForTablet","TextClearButtonForMobile","LeanCanvasForMobile","DownLoadSpredSheetButtonForMobile","ButtonGroupForMobile","AppContext","createContext","ALL_TEXT_CLEAR","TEXT_CLEAR","CREATE_LEAN_CANVAS","minHeight","boxSizing","desktop","laptop","tablet","mobile","Main","console","log","window","location","domein","document","domain","REACT_APP_HEROKU_DOMEIN","REACT_APP_ORIGINAL_URL","REACT_APP_INSECURE_URL","setSpredSheetUrl","isFirstRender","useContext","isDesktop","useMediaQuery","minWidth","isLaptop","maxWidth","isTablet","isMobile","REACT_APP_API_URL_EXPORT","type","axios","method","url","data","then","response","catch","error","footer","footerItem","Footer","gutterBottom","card","media","Page404","Card","CardActionArea","CardMedia","image","alt","CardContent","component","itemParent","PrivacyPolicy","Link","TermsOfService","operationLeanCanvasContents","state","action","contents","filter","event","APP_KEY","App","appState","initialState","contens","useReducer","reducer","setItem","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.520c9123.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  logo: {\r\n    background: \"linear-gradient(45deg, #1976d2 0%, #2196f3 35%, #00d4ff 100%)\",\r\n    border: 0,\r\n    boxShadow: \"0 3px 5px 2px #b6dcfb\",\r\n    color: \"white\",\r\n    position: \"sticky\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.logo}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">\r\n            <Link\r\n              to=\"/\"\r\n              color=\"inherit\"\r\n              style={{ color: \"#fff\", textDecoration: \"none\" }}\r\n            >\r\n              YourIdea - リーンキャンバスエクスポートツール\r\n            </Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport {\r\n  fade,\r\n} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flex: 0.9\r\n  },\r\n  container: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"3%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  containerTopRatio: {\r\n    flex: 0.8\r\n  },\r\n  topContent:{\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  gridItemTwoVertical: {\r\n    position: 'relative',\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  gridItemOnlyOne: {\r\n    position: 'relative',\r\n  },\r\n  containerBottomRatio: {\r\n    flex: 0.2\r\n  },\r\n  gridItemTwoRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  toolTipSmall: {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    top:8,\r\n    right: 10\r\n  },\r\n  toolTipMedium: {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    top: 8,\r\n    right: 10\r\n  },\r\n  toolTipLarge: {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    top: 8,\r\n    right: 10\r\n  },\r\n  color: {\r\n    color: \"red\"\r\n  }\r\n});\r\n\r\n\r\nconst useStylesFormSmall = makeStyles((theme) => ({\r\n  root: {\r\n    borderTop: '2px solid #e2e2e1',\r\n    borderBottom: '2px solid #e2e2e1',\r\n    borderLeft: '2px solid #e2e2e1',\r\n    borderRight: '2px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 0,\r\n    backgroundColor: '#fff',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fafafa',\r\n      borderColor: \"#c8c8c8\",\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxshadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px inset`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\nconst useStylesFormMedium = makeStyles((theme) => ({\r\n  root: {\r\n    borderTop: '4px solid #e2e2e1',\r\n    borderBottom: '3px solid #e2e2e1',\r\n    borderLeft: '2px solid #e2e2e1',\r\n    borderRight: '2px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 0,\r\n    backgroundColor: '#fff',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fafafa',\r\n      borderColor: \"#c8c8c8\",\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxshadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px inset`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nconst FormTextField = ({formType, ...props}) => {\r\n  const FormMedium = useStylesFormMedium()\r\n  const FormSmall = useStylesFormSmall()\r\n  const classes = formType ? FormMedium : FormSmall\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst LeanCanvasForDesktop = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    problem,\r\n    setProblem,\r\n    alternatives,\r\n    setAlternatives,\r\n    customer,\r\n    setCustomer,\r\n    earlyAdopters,\r\n    setEarlyAdopters,\r\n    uniqueValue,\r\n    setUniqueValue,\r\n    solution,\r\n    setSolution,\r\n    channels,\r\n    setChannels,\r\n    revenue,\r\n    setRevenue,\r\n    cost,\r\n    setCost,\r\n    keyMetrics,\r\n    setKeyMetrics,\r\n    unfairAdvantage,\r\n    setUnfairAdvantage\r\n  } = props\r\n\r\n  const PLOBLEM_KEY = 'problem'\r\n  const ALTERNATIVES_KEY = 'alternatives'\r\n  const CUSTOMER_KEY = 'customer'\r\n  const EARLYADOPTERS_KEY = 'earlyAdopters'\r\n  const UNIQUEVALUE_KEY = 'uniqueValue'\r\n  const SOLUTION_KEY = 'solution'\r\n  const CHANNELS_KEY = 'channels'\r\n  const REVENUE_KEY = 'revenue'\r\n  const COST_KEY = 'cost'\r\n  const KEYMETRICS_KEY = 'keyMetrics'\r\n  const UNFAIRADVANTAGE_KEY = 'unfairAdvantage'\r\n\r\n  const initValue = (key, dispatch) => {\r\n    const initVal = sessionStorage.getItem(key);\r\n    dispatch(initVal ? JSON.parse(initVal) : \"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    initValue(PLOBLEM_KEY, setProblem)\r\n    initValue(ALTERNATIVES_KEY, setAlternatives)\r\n    initValue(CUSTOMER_KEY, setCustomer)\r\n    initValue(EARLYADOPTERS_KEY, setEarlyAdopters)\r\n    initValue(UNIQUEVALUE_KEY, setUniqueValue)\r\n    initValue(SOLUTION_KEY, setSolution)\r\n    initValue(CHANNELS_KEY, setChannels)\r\n    initValue(REVENUE_KEY, setRevenue)\r\n    initValue(COST_KEY, setCost)\r\n    initValue(KEYMETRICS_KEY, setKeyMetrics)\r\n    initValue(UNFAIRADVANTAGE_KEY, setUnfairAdvantage)\r\n  }, [setProblem, setAlternatives, setCustomer, setEarlyAdopters, setUniqueValue, setSolution, setChannels, setRevenue, setCost, setKeyMetrics, setUnfairAdvantage]);\r\n\r\n  const mounted = useRef(false)\r\n  useEffect(() => {\r\n    if(mounted.current) {\r\n      sessionStorage[PLOBLEM_KEY] = JSON.stringify(problem);\r\n      sessionStorage[ALTERNATIVES_KEY] = JSON.stringify(alternatives);\r\n      sessionStorage[CUSTOMER_KEY] = JSON.stringify(customer);\r\n      sessionStorage[EARLYADOPTERS_KEY] = JSON.stringify(earlyAdopters);\r\n      sessionStorage[UNIQUEVALUE_KEY] = JSON.stringify(uniqueValue);\r\n      sessionStorage[SOLUTION_KEY] = JSON.stringify(solution);\r\n      sessionStorage[CHANNELS_KEY] = JSON.stringify(channels);\r\n      sessionStorage[REVENUE_KEY] = JSON.stringify(revenue);\r\n      sessionStorage[COST_KEY] = JSON.stringify(cost);\r\n      sessionStorage[KEYMETRICS_KEY] = JSON.stringify(keyMetrics);\r\n      sessionStorage[UNFAIRADVANTAGE_KEY] = JSON.stringify(unfairAdvantage);\r\n    } else {\r\n      mounted.current = true\r\n    }\r\n  }, [problem, alternatives, customer, earlyAdopters, uniqueValue, solution, channels, revenue, cost, keyMetrics, unfairAdvantage])\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.container}>\r\n        <Paper elevation={3} >\r\n          <Box className={classes.containerTopRatio}>\r\n          <Grid container className={classes.topContent}>\r\n            <Grid item xs >\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"上位三つの課題を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                  <FormTextField\r\n                    label=\"①課題\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={problem}\r\n                    onChange={e => setProblem(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"既存の代替品を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"②既存の代替品\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={alternatives}\r\n                  onChange={e => setAlternatives(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"具体的な解決策の上位三つを記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                    label=\"⑥ソリューション\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={solution}\r\n                    onChange={e => setSolution(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"PMFにたどり着くまでに計測すべき指標を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                    <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑩主要指標\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={keyMetrics}\r\n                  onChange={e => setKeyMetrics(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs className={classes.gridItemOnlyOne}>\r\n              <Tooltip title=\"他とは違っていて注目する価値がある理由を記載します。\" placement=\"top\" className={classes.toolTipMedium}>\r\n                <InfoOutlinedIcon color=\"action\" />\r\n              </Tooltip>\r\n              <FormTextField\r\n                  label=\"⑤独自の価値提案\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={true}\r\n                  multiline\r\n                  rows={16}\r\n                  fullWidth\r\n                  value={uniqueValue}\r\n                  onChange={e => setUniqueValue(e.target.value)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"競合に対しての圧倒的な優位性を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑪圧倒的な優位性\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={unfairAdvantage}\r\n                  onChange={e => setUnfairAdvantage(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"顧客にリーチする経路を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑦チャネル\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={channels}\r\n                  onChange={e => setChannels(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs >\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"顧客の特徴を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                  <FormTextField\r\n                    label=\"③顧客セグメント\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={customer}\r\n                    onChange={e => setCustomer(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"課題に対して積極的に代替策を探している人の特徴を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                  <FormTextField\r\n                    label=\"④アーリーアダプター\"\r\n                    className={classes.margin}\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={earlyAdopters}\r\n                    onChange={e => setEarlyAdopters(e.target.value)}\r\n                  />\r\n                </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          </Box>\r\n          <Box className={classes.containerBottomRatio}>\r\n            <Grid container className={classes.gridItemTwoRow}>\r\n              <Grid item xs className={classes.gridItemOnlyOne}>\r\n                <Tooltip title=\"市場に送り出すまでにかかるコストを記載します。\" placement=\"top\" className={classes.toolTipLarge}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑨コスト構造\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={revenue}\r\n                  onChange={e => setRevenue(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemOnlyOne}>\r\n                <Tooltip title=\"どのような課金形態になるのかを記載します。\" placement=\"top\" className={classes.toolTipLarge}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑧収益の流れ\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={cost}\r\n                  onChange={e => setCost(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default LeanCanvasForDesktop","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';import {\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport LinkOutlinedIcon from '@material-ui/icons/LinkOutlined';\r\n\r\nconst CancelButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(\"#f5f5f5\"),\r\n    backgroundColor: \"#f5f5f5\",\r\n    '&:hover': {\r\n      backgroundColor: \"#f5f5f5\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst FinishModal = (props) => {\r\n  const openFinishModal = props.openFinishModal\r\n  const handleCloseFinishModal = props.handleCloseFinishModal\r\n  const spredSheetUrl = props.spredSheetUrl\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={openFinishModal}\r\n        onClose={handleCloseFinishModal}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        style={{textAlign: \"center\", alignContent: 'center'}}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" style={{textAlign: \"center\", paddingTop: 30, alignContent: 'center'}}>\r\n          <Box fontWeight=\"fontWeightBold\" m={1}>\r\n            リーンキャンバスを作成しました！\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box style={{textAlign: \"center\", paddingTop: 15, alignContent: 'center'}}>\r\n          <Button href={spredSheetUrl} color=\"primary\" variant=\"outlined\" startIcon={< LinkOutlinedIcon />}>\r\n          リーンキャンバスシート\r\n        </Button>\r\n          <Box m={2}>\r\n            <Typography variant=\"body2\">\r\n              上記のシートは自動削除されるので、シートをコピーしてご使用ください。\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box style={{textAlign: \"center\", paddingTop: 25,paddingBottom: 25, alignContent: 'center'}}>\r\n            <CancelButton onClick={handleCloseFinishModal} variant=\"contained\" >\r\n              <Box fontWeight=\"fontWeightBold\" >\r\n                編集を続ける\r\n              </Box>\r\n            </CancelButton>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FinishModal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    justifyContent: \"center\"\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}","import React, {useEffect} from 'react';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\n// import LinearProgress from '@material-ui/core/LinearProgress';\r\nimport CircularIndeterminate from \"./CircularIndeterminate\"\r\n\r\n// const BorderLinearProgress = withStyles((theme) => ({\r\n//   root: {\r\n//     height: 15,\r\n//     borderRadius: 15,\r\n//   },\r\n//   colorPrimary: {\r\n//     backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n//   },\r\n//   bar: {\r\n//     borderRadius: 5,\r\n//     backgroundColor: '#1a90ff',\r\n//   },\r\n// }))(LinearProgress);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst CustomizedProgressBars = (props) => {\r\n  const classes = useStyles();\r\n  // const [progress, setProgress] = useState(0);\r\n\r\n  const setOpenPreparationModal = props.setOpenPreparationModal\r\n  const setOpenFinishModal = props.setOpenFinishModal\r\n  const setOpenErrorArrivedModal = props.setOpenErrorArrivedModal\r\n  const isArrivedUrl = props.isArrivedUrl\r\n  const setIsArrivedUrl = props.setIsArrivedUrl\r\n  const isNotArrivedUrl = props.isNotArrivedUrl\r\n  const setIsNotArrivedUrl = props.setIsNotArrivedUrl\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const timer = setInterval(() => {\r\n  //     setProgress((prevProgress) => (prevProgress >= 100 ? (()=>{clearInterval(timer); return 100;})() : prevProgress + 5));\r\n  //   }, 400);\r\n  //   return () => clearInterval(timer);\r\n  // }, []\r\n  // );\r\n\r\n  // progressBar完成時コード\r\n  // useEffect(() => {\r\n  //   if ((isArrivedUrl)&&(progress>=100)) {\r\n  //     setTimeout(() => {\r\n  //       setOpenPreparationModal(false)\r\n  //       setIsArrivedUrl(false)\r\n  //       setOpenFinishModal(true)\r\n  //     }, 100);\r\n  //   }\r\n  // }, [isArrivedUrl,progress]\r\n  // );\r\n\r\n  // 暫定対応\r\n  useEffect(() => {\r\n    if ((isArrivedUrl)) {\r\n      setTimeout(() => {\r\n        setOpenPreparationModal(false)\r\n        setIsArrivedUrl(false)\r\n        setOpenFinishModal(true)\r\n      }, 100);\r\n    }\r\n  }, [isArrivedUrl, setOpenPreparationModal, setIsArrivedUrl, setOpenFinishModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if ((isNotArrivedUrl)) {\r\n      setTimeout(() => {\r\n        setOpenPreparationModal(false)\r\n        setIsNotArrivedUrl(false)\r\n        setOpenErrorArrivedModal(true)\r\n      }, 100);\r\n    }\r\n  }, [isNotArrivedUrl, setOpenPreparationModal, setIsNotArrivedUrl, setOpenErrorArrivedModal]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <BorderLinearProgress variant=\"determinate\" value={progress} /> */}\r\n      <CircularIndeterminate/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomizedProgressBars","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport CustomizedProgressBars from './CustomizedProgressBars'\r\n\r\nconst CancelButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(\"#f5f5f5\"),\r\n    backgroundColor: \"#f5f5f5\",\r\n    '&:hover': {\r\n      backgroundColor: \"#f5f5f5\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst PreparationModal = (props) => {\r\n  const openPreparationModal = props.openPreparationModal\r\n  const setOpenPreparationModal = props.setOpenPreparationModal\r\n  const handleClosePreparationModal = props.handleClosePreparationModal\r\n  const setOpenFinishModal = props.setOpenFinishModal\r\n  const spredSheetUrl = props.spredSheetUrl\r\n  const isArrivedUrl = props.isArrivedUrl\r\n  const setIsArrivedUrl = props.setIsArrivedUrl\r\n  const isNotArrivedUrl = props.isNotArrivedUrl\r\n  const setIsNotArrivedUrl = props.setIsNotArrivedUrl\r\n  const setOpenErrorArrivedModal = props.setOpenErrorArrivedModal\r\n  let quote = props.quote\r\n  let byName = props.byName\r\n\r\n  return (\r\n  <Dialog\r\n    open={openPreparationModal}\r\n    onClose={handleClosePreparationModal}\r\n    aria-labelledby=\"alert-dialog-title\"\r\n    aria-describedby=\"alert-dialog-description\"\r\n    style={{textAlign: \"center\", alignContent: 'center'}}\r\n  >\r\n    <DialogTitle id=\"alert-dialog-title\" style={{textAlign: \"center\", paddingTop: 30, alignContent: 'center'}}>\r\n      <Box fontWeight=\"fontWeightBold\" m={1}>\r\n        リーンキャンバスを準備中...\r\n      </Box>\r\n      <Box fontWeight=\"fontWeightRegular\" fontSize={14} m={1}>\r\n        20秒ほどかかる場合がございます。しばらくお待ちください。\r\n      </Box>\r\n    </DialogTitle>\r\n    <DialogContent>\r\n      <CustomizedProgressBars\r\n        setOpenPreparationModal={setOpenPreparationModal}\r\n        setOpenFinishModal={setOpenFinishModal}\r\n        setOpenErrorArrivedModal={setOpenErrorArrivedModal}\r\n        spredSheetUrl={spredSheetUrl}\r\n        isArrivedUrl={isArrivedUrl}\r\n        setIsArrivedUrl={setIsArrivedUrl}\r\n        isNotArrivedUrl={isNotArrivedUrl}\r\n        setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n      />\r\n      <Box id=\"alert-dialog-description\" style={{textAlign: \"center\", paddingTop: 25, alignContent: 'center'}}>\r\n        <Box fontWeight=\"fontWeightLight\" color=\"text.disabled\" fontSize={16}>\r\n          {quote}ー{byName}ー\r\n        </Box>\r\n      </Box>\r\n      <Box style={{textAlign: \"center\", paddingTop: 25,paddingBottom: 25, alignContent: 'center'}}>\r\n        <CancelButton onClick={handleClosePreparationModal} variant=\"contained\" >\r\n          <Box fontWeight=\"fontWeightBold\" >\r\n            キャンセル\r\n          </Box>\r\n        </CancelButton>\r\n      </Box>\r\n    </DialogContent>\r\n  </Dialog>\r\n  )\r\n}\r\n\r\nexport default PreparationModal;","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';import {\n  withStyles,\n} from '@material-ui/core/styles';\n\nimport LinkOutlinedIcon from '@material-ui/icons/LinkOutlined';\n\nconst CancelButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(\"#f5f5f5\"),\n    backgroundColor: \"#f5f5f5\",\n    '&:hover': {\n      backgroundColor: \"#f5f5f5\",\n    },\n  },\n}))(Button);\n\nconst ErrorArrivedModal = (props) => {\n  const openErrorArrivedModal = props.openErrorArrivedModal\n  const handleCloseErrorArrivedModal = props.handleCloseErrorArrivedModal\n    require('dotenv').config();\n  const REACT_APP_TWITTER_URL = process.env.REACT_APP_TWITTER_URL;\n\n  return (\n    <>\n      <Dialog\n        open={openErrorArrivedModal}\n        onClose={handleCloseErrorArrivedModal}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        style={{textAlign: \"center\", alignContent: 'center'}}\n      >\n        <DialogTitle id=\"alert-dialog-title\" style={{textAlign: \"center\", paddingTop: 30, alignContent: 'center'}}>\n          <Box fontWeight=\"fontWeightBold\" m={1}>\n            エラーにより作成に失敗しました。時間を置いて再度お試しください。\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          <Box style={{textAlign: \"center\", paddingTop: 15, alignContent: 'center'}}>\n          <Button href={REACT_APP_TWITTER_URL} color=\"primary\" variant=\"outlined\" startIcon={< LinkOutlinedIcon />}>\n          twitterで状態を確認する。\n        </Button>\n\n          </Box>\n          <Box style={{textAlign: \"center\", paddingTop: 25,paddingBottom: 25, alignContent: 'center'}}>\n            <CancelButton onClick={handleCloseErrorArrivedModal} variant=\"contained\" >\n              <Box fontWeight=\"fontWeightBold\" >\n                編集を続ける\n              </Box>\n            </CancelButton>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ErrorArrivedModal;","export const quotes = [\n    {quote: \"顧客に欲しいものを聞いていたら、彼らは「もっと速い馬が欲しい」と答えていただろう。\", name: \"ヘンリー・フォード\"},\n    {quote: \"欲しいものを知るというのは顧客の仕事ではない。\", name: \"スティーブ・ジョブズ\"},\n    {quote: \"建物の外に出よ。\", name: \"スティーブ・ブランク\"},\n    {quote: \"成功するスタートアップとは、リソースを使い切る前に十分なイテレーションを行うスタートアップのことである。\", name: \"エリック・リース\"},\n    {quote: \"正しい行動を適切な時期に。\", name: \"ビジョイ・ゴスワミ\"},\n    {quote: \"顧客はあなたのソリューションに興味はない。興味があるのは、顧客自身の課題だ。\", name: \"デイブ・マクルーア\"},\n    {quote: \"本物の圧倒的な優位性とは、簡単にコピーしたり購入したりできないものだ。\", name: \"ジョイソン・コーヘン\"},\n    {quote: \"スタートアップは一つの指標にしか集中できない。何か一つのことを決めて、その他のことは無視しよう。\", name: \"ノア・ケーガン\"},\n    {quote: \"最善はしばしば善の敵になる。\", name: \"ボルテール\"},\n    {quote: \"10人中10人があなたの製品をいらないと言ったら、それは非常に意味のあることだ。\", name: \"エリック・リース\"},\n    {quote: \"デザインよりもコンテンツ。コンテンツのないデザインはデザインではない。それはデコレーションだ。\", name: \"ジェフリー・ゼルダマン\"},\n    {quote: \"顧客の獲得にあまり労力をかけてはいけない。離れていく顧客はそのままにしておこう。\", name: \"ゲイリー・ヴェイナチャック\"},\n    {quote: \"フォームは最初の課題。\", name: \"ジョシュア・ポーター\"},\n    {quote: \"ユーザビリティテストは旅行である。見聞を広めてくれるからだ。\", name: \"スティーブ・クルーグ\"},\n    {quote: \"本当の見込み客がいる優れた市場では、市場がスタートアップから製品を引っ張る。\", name: \"マーク・アンドリーセン\"},\n    {quote: \"購入してくれない理由がわかるまで、コンパイラを横に置いておこう。\", name: \"ジェイソン・コーヘン\"},\n    {quote: \"フィーチャークリープ（機能の肥大化）には中毒性がある。\", name: \"ベンジャミン・ヨスコビッツ\"},\n    {quote: \"人が欲しがるものを作れ。\", name: \"ポール・グレアム\"},\n    {quote: \"僕たちはこれを作ったけれど、会社になるとは考えていなかった。ただ、最高だと思ったから作っただけだった。\", name: \"マーク・ザッカーバーグ\"},\n    {quote: \"価格は納得してもらえればいいのである。\", name: \"ニール・デビッドソン\"},\n]","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\r\n\r\nimport FinishModal from './FinishModal'\r\nimport PreparationModal from './PreparationModal'\r\nimport ErrorArrivedModal from './ErrorArrivedModal'\r\nimport {quotes} from '../utilty/randomQuote'\r\n\r\nconst SpredSheetButton = withStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 50,\r\n    color: theme.palette.getContrastText(\"#0F9D58\"),\r\n    backgroundColor: \"#0F9D58\",\r\n    '&:hover': {\r\n      backgroundColor: \"#0c7e46\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst DownLoadSpredSheetButton = (props) => {\r\n  const {\r\n    createLeanCanvas,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  const [openPreparationModal, setOpenPreparationModal] = useState(false);\r\n  const [openFinishModal, setOpenFinishModal] = useState(false);\r\n  const [openErrorArrivedModal, setOpenErrorArrivedModal] = useState(false);\r\n\r\n  let [quote, setQuote] = useState(\"\")\r\n  let [byName, setByName] = useState(\"\")\r\n\r\n  const handleOpenPreparationModal = () => {\r\n    displayRandomQuotesAndName ()\r\n    setOpenPreparationModal(true);\r\n    createLeanCanvas();\r\n  };\r\n\r\n  const handleClosePreparationModal = () => {\r\n    setOpenPreparationModal(false);\r\n    setIsArrivedUrl(false)\r\n  };\r\n\r\n  const handleCloseFinishModal = () => {\r\n    setOpenFinishModal(false);\r\n  };\r\n\r\n  const handleCloseErrorArrivedModal = () => {\r\n    setOpenErrorArrivedModal(false);\r\n  };\r\n\r\n  let randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n\r\n  const displayRandomQuotesAndName = () => {\r\n    setQuote(randomQuote.quote)\r\n    setByName(randomQuote.name)\r\n  }\r\n  return (\r\n    <>\r\n      <SpredSheetButton variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleOpenPreparationModal} startIcon={<CloudDownloadOutlinedIcon />}>\r\n        Google SpredSheet\r\n      </SpredSheetButton>\r\n      <PreparationModal\r\n        openPreparationModal={openPreparationModal}\r\n        setOpenPreparationModal={setOpenPreparationModal}\r\n        handleClosePreparationModal={handleClosePreparationModal}\r\n        setOpenFinishModal={setOpenFinishModal}\r\n        setOpenErrorArrivedModal={setOpenErrorArrivedModal}\r\n        spredSheetUrl={spredSheetUrl}\r\n        isArrivedUrl={isArrivedUrl}\r\n        setIsArrivedUrl={setIsArrivedUrl}\r\n        isNotArrivedUrl={isNotArrivedUrl}\r\n        setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        quote={quote}\r\n        byName={byName}\r\n      />\r\n      <FinishModal\r\n        openFinishModal={openFinishModal}\r\n        handleCloseFinishModal={handleCloseFinishModal}\r\n        spredSheetUrl={spredSheetUrl}\r\n        />\r\n      <ErrorArrivedModal\r\n      openErrorArrivedModal={openErrorArrivedModal}\r\n      handleCloseErrorArrivedModal={handleCloseErrorArrivedModal}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DownLoadSpredSheetButton;","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear';\r\n\r\nconst AllTextClearButton = (props) => {\r\n\r\n  const allTextClear = props.allTextClear\r\n  const setProblem = props.setProblem\r\n  const setAlternatives = props.setAlternatives\r\n  const setCustomer = props.setCustomer\r\n  const setEarlyAdopters = props.setEarlyAdopters\r\n  const setUniqueValue = props.setUniqueValue\r\n  const setSolution = props.setSolution\r\n  const setChannels = props.setChannels\r\n  const setRevenue = props.setRevenue\r\n  const setCost = props.setCost\r\n  const setKeyMetrics = props.setKeyMetrics\r\n  const setUnfairAdvantage = props.setUnfairAdvantage\r\n\r\n  const allClear = () => {\r\n    allTextClear()\r\n    setProblem(\"\")\r\n    setAlternatives(\"\")\r\n    setCustomer(\"\")\r\n    setEarlyAdopters(\"\")\r\n    setUniqueValue(\"\")\r\n    setSolution(\"\")\r\n    setChannels(\"\")\r\n    setRevenue(\"\")\r\n    setCost(\"\")\r\n    setKeyMetrics(\"\")\r\n    setUnfairAdvantage(\"\")\r\n  }\r\n\r\n  return (\r\n      <Tooltip title=\"すべて消去\" arrow>\r\n        <Fab color=\"default\" onClick={allClear}>\r\n          <FormatClearIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n  );\r\n}\r\n\r\nexport default AllTextClearButton;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport DownLoadSpredSheetButton from '../DownLoadSpredSheetButton'\r\nimport AllTextClearButton from '../AllTextClearButton'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonGroup: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"3%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flex: 0.1,\r\n    flexDirection: \"column\"\r\n  },\r\n  button: {\r\n    flex: \"inherit\",\r\n    margin:\"auto\"\r\n  }\r\n}));\r\n\r\nconst ButtonGroupForDesktop = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    setProblem,\r\n    setAlternatives,\r\n    setCustomer,\r\n    setEarlyAdopters,\r\n    setUniqueValue,\r\n    setSolution,\r\n    setChannels,\r\n    setRevenue,\r\n    setCost,\r\n    setKeyMetrics,\r\n    setUnfairAdvantage,\r\n    createLeanCanvas,\r\n    allTextClear,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  return (\r\n    <Box className={classes.buttonGroup}  >\r\n      <Box flex={0.5} className={classes.button}>\r\n        <DownLoadSpredSheetButton\r\n          createLeanCanvas={createLeanCanvas}\r\n          spredSheetUrl={spredSheetUrl}\r\n          isArrivedUrl={isArrivedUrl}\r\n          setIsArrivedUrl={setIsArrivedUrl}\r\n          isNotArrivedUrl={isNotArrivedUrl}\r\n          setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        />\r\n      </Box>\r\n      <Box flex={0.5} className={classes.button}>\r\n        <AllTextClearButton\r\n          allTextClear={allTextClear}\r\n          setProblem={setProblem}\r\n          setAlternatives={setAlternatives}\r\n          setCustomer={setCustomer}\r\n          setEarlyAdopters={setEarlyAdopters}\r\n          setUniqueValue={setUniqueValue}\r\n          setSolution={setSolution}\r\n          setChannels={setChannels}\r\n          setRevenue={setRevenue}\r\n          setCost={setCost}\r\n          setKeyMetrics={setKeyMetrics}\r\n          setUnfairAdvantage={setUnfairAdvantage}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ButtonGroupForDesktop;","import React, {useEffect, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport {\r\n  fade,\r\n} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n  },\r\n  container: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"1%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  containerTopRatio: {\r\n    flex: 0.8\r\n  },\r\n  topContent:{\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  gridItemTwoVertical: {\r\n    position: 'relative',\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  gridItemOnlyOne: {\r\n    position: 'relative',\r\n  },\r\n  containerBottomRatio: {\r\n    flex: 0.2\r\n  },\r\n  gridItemTwoRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  toolTipSmall: {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    top: 6,\r\n    right: 10\r\n  },\r\n  toolTipMedium: {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    top: 6,\r\n    right: 10,\r\n  },\r\n  toolTipLarge: {\r\n    position: 'absolute',\r\n    zIndex: 2,\r\n    top: 6,\r\n    right: 10\r\n  },\r\n  color: {\r\n    color: \"red\"\r\n  }\r\n});\r\n\r\n\r\nconst useStylesFormSmall = makeStyles((theme) => ({\r\n  root: {\r\n    borderTop: '2px solid #e2e2e1',\r\n    borderBottom: '2px solid #e2e2e1',\r\n    borderLeft: '2px solid #e2e2e1',\r\n    borderRight: '2px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 0,\r\n    backgroundColor: '#fff',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fafafa',\r\n      borderColor: \"#c8c8c8\",\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxshadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px inset`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\nconst useStylesFormMedium = makeStyles((theme) => ({\r\n  root: {\r\n    borderTop: '4px solid #e2e2e1',\r\n    borderBottom: '3px solid #e2e2e1',\r\n    borderLeft: '2px solid #e2e2e1',\r\n    borderRight: '2px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 0,\r\n    backgroundColor: '#fff',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fafafa',\r\n      borderColor: \"#c8c8c8\",\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxshadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px inset`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nconst FormTextField = ({formType, ...props}) => {\r\n  const FormMedium = useStylesFormMedium()\r\n  const FormSmall = useStylesFormSmall()\r\n  const classes = formType ? FormMedium : FormSmall\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst LeanCanvasForLaptop = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    problem,\r\n    setProblem,\r\n    alternatives,\r\n    setAlternatives,\r\n    customer,\r\n    setCustomer,\r\n    earlyAdopters,\r\n    setEarlyAdopters,\r\n    uniqueValue,\r\n    setUniqueValue,\r\n    solution,\r\n    setSolution,\r\n    channels,\r\n    setChannels,\r\n    revenue,\r\n    setRevenue,\r\n    cost,\r\n    setCost,\r\n    keyMetrics,\r\n    setKeyMetrics,\r\n    unfairAdvantage,\r\n    setUnfairAdvantage\r\n  } = props\r\n\r\n  const PLOBLEM_KEY = 'problem'\r\n  const ALTERNATIVES_KEY = 'alternatives'\r\n  const CUSTOMER_KEY = 'customer'\r\n  const EARLYADOPTERS_KEY = 'earlyAdopters'\r\n  const UNIQUEVALUE_KEY = 'uniqueValue'\r\n  const SOLUTION_KEY = 'solution'\r\n  const CHANNELS_KEY = 'channels'\r\n  const REVENUE_KEY = 'revenue'\r\n  const COST_KEY = 'cost'\r\n  const KEYMETRICS_KEY = 'keyMetrics'\r\n  const UNFAIRADVANTAGE_KEY = 'unfairAdvantage'\r\n\r\n  const initValue = (key, dispatch) => {\r\n    const initVal = sessionStorage.getItem(key);\r\n    dispatch(initVal ? JSON.parse(initVal) : \"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    initValue(PLOBLEM_KEY, setProblem)\r\n    initValue(ALTERNATIVES_KEY, setAlternatives)\r\n    initValue(CUSTOMER_KEY, setCustomer)\r\n    initValue(EARLYADOPTERS_KEY, setEarlyAdopters)\r\n    initValue(UNIQUEVALUE_KEY, setUniqueValue)\r\n    initValue(SOLUTION_KEY, setSolution)\r\n    initValue(CHANNELS_KEY, setChannels)\r\n    initValue(REVENUE_KEY, setRevenue)\r\n    initValue(COST_KEY, setCost)\r\n    initValue(KEYMETRICS_KEY, setKeyMetrics)\r\n    initValue(UNFAIRADVANTAGE_KEY, setUnfairAdvantage)\r\n  }, [setProblem, setAlternatives, setCustomer, setEarlyAdopters, setUniqueValue, setSolution, setChannels, setRevenue, setCost, setKeyMetrics, setUnfairAdvantage]);\r\n\r\n  const mounted = useRef(false)\r\n  useEffect(() => {\r\n    if(mounted.current) {\r\n      sessionStorage[PLOBLEM_KEY] = JSON.stringify(problem);\r\n      sessionStorage[ALTERNATIVES_KEY] = JSON.stringify(alternatives);\r\n      sessionStorage[CUSTOMER_KEY] = JSON.stringify(customer);\r\n      sessionStorage[EARLYADOPTERS_KEY] = JSON.stringify(earlyAdopters);\r\n      sessionStorage[UNIQUEVALUE_KEY] = JSON.stringify(uniqueValue);\r\n      sessionStorage[SOLUTION_KEY] = JSON.stringify(solution);\r\n      sessionStorage[CHANNELS_KEY] = JSON.stringify(channels);\r\n      sessionStorage[REVENUE_KEY] = JSON.stringify(revenue);\r\n      sessionStorage[COST_KEY] = JSON.stringify(cost);\r\n      sessionStorage[KEYMETRICS_KEY] = JSON.stringify(keyMetrics);\r\n      sessionStorage[UNFAIRADVANTAGE_KEY] = JSON.stringify(unfairAdvantage);\r\n    } else {\r\n      mounted.current = true\r\n    }\r\n  }, [problem, alternatives, customer, earlyAdopters, uniqueValue, solution, channels, revenue, cost, keyMetrics, unfairAdvantage])\r\n\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.container}>\r\n        <Paper elevation={3} >\r\n          <Box className={classes.containerTopRatio}>\r\n          <Grid container className={classes.topContent}>\r\n            <Grid item xs >\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"上位三つの課題を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                  <FormTextField\r\n                    label=\"①課題\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={problem}\r\n                    onChange={e => setProblem(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"既存の代替品を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"②既存の代替品\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={alternatives}\r\n                  onChange={e => setAlternatives(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"具体的な解決策の上位三つを記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                    label=\"⑥ソリューション\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={solution}\r\n                    onChange={e => setSolution(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"PMFにたどり着くまでに計測すべき指標を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                    <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑩主要指標\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={keyMetrics}\r\n                  onChange={e => setKeyMetrics(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs className={classes.gridItemOnlyOne}>\r\n              <Tooltip title=\"他とは違っていて注目する価値がある理由を記載します。\" placement=\"top\" className={classes.toolTipMedium}>\r\n                <InfoOutlinedIcon color=\"action\" />\r\n              </Tooltip>\r\n              <FormTextField\r\n                  label=\"⑤独自の価値提案\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={true}\r\n                  multiline\r\n                  rows={16}\r\n                  fullWidth\r\n                  value={uniqueValue}\r\n                  onChange={e => setUniqueValue(e.target.value)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"競合に対しての圧倒的な優位性を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑪圧倒的な優位性\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={unfairAdvantage}\r\n                  onChange={e => setUnfairAdvantage(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"顧客にリーチする経路を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑦チャネル\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={channels}\r\n                  onChange={e => setChannels(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs >\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"顧客の特徴を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                  <FormTextField\r\n                    label=\"③顧客セグメント\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={customer}\r\n                    onChange={e => setCustomer(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid container item xs className={classes.gridItemTwoVertical}>\r\n                <Tooltip title=\"課題に対して積極的に代替策を探している人の特徴を記載します。\" placement=\"top\" className={classes.toolTipSmall}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                  <FormTextField\r\n                    label=\"④アーリーアダプター\"\r\n                    className={classes.margin}\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    formType={false}\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={earlyAdopters}\r\n                    onChange={e => setEarlyAdopters(e.target.value)}\r\n                  />\r\n                </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          </Box>\r\n          <Box className={classes.containerBottomRatio}>\r\n            <Grid container className={classes.gridItemTwoRow}>\r\n              <Grid item xs className={classes.gridItemOnlyOne}>\r\n                <Tooltip title=\"市場に送り出すまでにかかるコストを記載します。\" placement=\"top\" className={classes.toolTipLarge}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑨コスト構造\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={revenue}\r\n                  onChange={e => setRevenue(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs className={classes.gridItemOnlyOne}>\r\n                <Tooltip title=\"どのような課金形態になるのかを記載します。\" placement=\"top\" className={classes.toolTipLarge}>\r\n                  <InfoOutlinedIcon color=\"action\" />\r\n                </Tooltip>\r\n                <FormTextField\r\n                  label=\"⑧収益の流れ\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  formType={false}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={cost}\r\n                  onChange={e => setCost(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default LeanCanvasForLaptop","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport DownLoadSpredSheetButton from '../DownLoadSpredSheetButton'\r\nimport AllTextClearButton from '../AllTextClearButton'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonGroup: {\r\n    marginBottom: \"10%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n  button: {\r\n    flex: \"inherit\",\r\n    margin:\"auto\"\r\n  }\r\n}));\r\n\r\nconst ButtonGroupForLaptop = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    setProblem,\r\n    setAlternatives,\r\n    setCustomer,\r\n    setEarlyAdopters,\r\n    setUniqueValue,\r\n    setSolution,\r\n    setChannels,\r\n    setRevenue,\r\n    setCost,\r\n    setKeyMetrics,\r\n    setUnfairAdvantage,\r\n    createLeanCanvas,\r\n    allTextClear,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  return (\r\n    <Box className={classes.buttonGroup}  >\r\n\r\n      <Box flex={0.5} className={classes.button}>\r\n        <AllTextClearButton\r\n          allTextClear={allTextClear}\r\n          setProblem={setProblem}\r\n          setAlternatives={setAlternatives}\r\n          setCustomer={setCustomer}\r\n          setEarlyAdopters={setEarlyAdopters}\r\n          setUniqueValue={setUniqueValue}\r\n          setSolution={setSolution}\r\n          setChannels={setChannels}\r\n          setRevenue={setRevenue}\r\n          setCost={setCost}\r\n          setKeyMetrics={setKeyMetrics}\r\n          setUnfairAdvantage={setUnfairAdvantage}\r\n        />\r\n      </Box>\r\n      <Box flex={0.5} className={classes.button}>\r\n        <DownLoadSpredSheetButton\r\n          createLeanCanvas={createLeanCanvas}\r\n          spredSheetUrl={spredSheetUrl}\r\n          isArrivedUrl={isArrivedUrl}\r\n          setIsArrivedUrl={setIsArrivedUrl}\r\n          isNotArrivedUrl={isNotArrivedUrl}\r\n          setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ButtonGroupForLaptop;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  fab: {\r\n      position: 'absolute',\r\n      zIndex: 2,\r\n      right: 3,\r\n      padding: 8\r\n    },\r\n}));\r\n\r\nconst TextClearButtonForTablet = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const textClear = () => {\r\n    if (props.setProblem) {props.setProblem(\"\") }\r\n    if (props.setAlternatives) props.setAlternatives(\"\")\r\n    if (props.setCustomer) props.setCustomer(\"\")\r\n    if (props.setEarlyAdopters) props.setEarlyAdopters(\"\")\r\n    if (props.setUniqueValue) props.setUniqueValue(\"\")\r\n    if (props.setSolution) props.setSolution(\"\")\r\n    if (props.setChannels) props.setChannels(\"\")\r\n    if (props.setRevenue) props.setRevenue(\"\")\r\n    if (props.setCost) props.setCost(\"\")\r\n    if (props.setKeyMetrics) props.setKeyMetrics(\"\")\r\n    if (props.setUnfairAdvantage) props.setUnfairAdvantage(\"\")\r\n  }\r\n\r\n  return (\r\n    <IconButton aria-label=\"delete\" size=\"medium\" onClick={textClear} className={classes.fab}>\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default TextClearButtonForTablet;","import React, {useEffect, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  fade,\r\n} from '@material-ui/core/styles';\r\n\r\nimport TextClearButtonForTablet from './TextClearButtonForTablet'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingBottom: 120\r\n  },\r\n  container: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"3%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  glidItemsHorizontal: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  glidItem: {\r\n    position: 'relative',\r\n  },\r\n  gridItemTwoRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  color: {\r\n    color: \"red\"\r\n  }\r\n});\r\n\r\n\r\nconst useStylesForm = makeStyles((theme) => ({\r\n  root: {\r\n    borderTop: '3px solid #e2e2e1',\r\n    borderBottom: '3px solid #e2e2e1',\r\n    borderLeft: '3px solid #e2e2e1',\r\n    borderRight: '3px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 0,\r\n    backgroundColor: '#fff',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fafafa',\r\n      borderColor: \"#c8c8c8\",\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxshadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px inset`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nconst FormTextField = ({...props}) => {\r\n  const classes = useStylesForm()\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst LeanCanvasForTablet = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    problem,\r\n    setProblem,\r\n    alternatives,\r\n    setAlternatives,\r\n    customer,\r\n    setCustomer,\r\n    earlyAdopters,\r\n    setEarlyAdopters,\r\n    uniqueValue,\r\n    setUniqueValue,\r\n    solution,\r\n    setSolution,\r\n    channels,\r\n    setChannels,\r\n    revenue,\r\n    setRevenue,\r\n    cost,\r\n    setCost,\r\n    keyMetrics,\r\n    setKeyMetrics,\r\n    unfairAdvantage,\r\n    setUnfairAdvantage,\r\n    textClear\r\n  } = props\r\n\r\n  const PLOBLEM_KEY = 'problem'\r\n  const ALTERNATIVES_KEY = 'alternatives'\r\n  const CUSTOMER_KEY = 'customer'\r\n  const EARLYADOPTERS_KEY = 'earlyAdopters'\r\n  const UNIQUEVALUE_KEY = 'uniqueValue'\r\n  const SOLUTION_KEY = 'solution'\r\n  const CHANNELS_KEY = 'channels'\r\n  const REVENUE_KEY = 'revenue'\r\n  const COST_KEY = 'cost'\r\n  const KEYMETRICS_KEY = 'keyMetrics'\r\n  const UNFAIRADVANTAGE_KEY = 'unfairAdvantage'\r\n\r\n  const initValue = (key, dispatch) => {\r\n    const initVal = sessionStorage.getItem(key);\r\n    dispatch(initVal ? JSON.parse(initVal) : \"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    initValue(PLOBLEM_KEY, setProblem)\r\n    initValue(ALTERNATIVES_KEY, setAlternatives)\r\n    initValue(CUSTOMER_KEY, setCustomer)\r\n    initValue(EARLYADOPTERS_KEY, setEarlyAdopters)\r\n    initValue(UNIQUEVALUE_KEY, setUniqueValue)\r\n    initValue(SOLUTION_KEY, setSolution)\r\n    initValue(CHANNELS_KEY, setChannels)\r\n    initValue(REVENUE_KEY, setRevenue)\r\n    initValue(COST_KEY, setCost)\r\n    initValue(KEYMETRICS_KEY, setKeyMetrics)\r\n    initValue(UNFAIRADVANTAGE_KEY, setUnfairAdvantage)\r\n  }, [setProblem, setAlternatives, setCustomer, setEarlyAdopters, setUniqueValue, setSolution, setChannels, setRevenue, setCost, setKeyMetrics, setUnfairAdvantage]);\r\n\r\n  const mounted = useRef(false)\r\n  useEffect(() => {\r\n    if(mounted.current) {\r\n      sessionStorage[PLOBLEM_KEY] = JSON.stringify(problem);\r\n      sessionStorage[ALTERNATIVES_KEY] = JSON.stringify(alternatives);\r\n      sessionStorage[CUSTOMER_KEY] = JSON.stringify(customer);\r\n      sessionStorage[EARLYADOPTERS_KEY] = JSON.stringify(earlyAdopters);\r\n      sessionStorage[UNIQUEVALUE_KEY] = JSON.stringify(uniqueValue);\r\n      sessionStorage[SOLUTION_KEY] = JSON.stringify(solution);\r\n      sessionStorage[CHANNELS_KEY] = JSON.stringify(channels);\r\n      sessionStorage[REVENUE_KEY] = JSON.stringify(revenue);\r\n      sessionStorage[COST_KEY] = JSON.stringify(cost);\r\n      sessionStorage[KEYMETRICS_KEY] = JSON.stringify(keyMetrics);\r\n      sessionStorage[UNFAIRADVANTAGE_KEY] = JSON.stringify(unfairAdvantage);\r\n    } else {\r\n      mounted.current = true\r\n    }\r\n  }, [problem, alternatives, customer, earlyAdopters, uniqueValue, solution, channels, revenue, cost, keyMetrics, unfairAdvantage])\r\n\r\n\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.container}>\r\n        <Paper elevation={3} >\r\n          <Grid container item className={classes.glidItemsHorizontal}>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setProblem={setProblem} textClear={textClear}/>\r\n                  <FormTextField\r\n                    label=\"①課題\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={problem}\r\n                    onChange={e => setProblem(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.glidItem}>\r\n                <TextClearButtonForTablet setAlternatives={setAlternatives} textClear={textClear}/>\r\n                <FormTextField\r\n                  label=\"②既存の代替品\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={alternatives}\r\n                  onChange={e => setAlternatives(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item className={classes.glidItemsHorizontal}>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setCustomer={setCustomer} textClear={textClear}/>\r\n                  <FormTextField\r\n                    label=\"③顧客セグメント\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={customer}\r\n                    onChange={e => setCustomer(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setEarlyAdopters={setEarlyAdopters} textClear={textClear}/>\r\n                  <FormTextField\r\n                    label=\"④アーリーアダプター\"\r\n                    className={classes.margin}\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={earlyAdopters}\r\n                    onChange={e => setEarlyAdopters(e.target.value)}\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item className={classes.glidItemsHorizontal}>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setUniqueValue={setUniqueValue} textClear={textClear}/>\r\n                <FormTextField\r\n                    label=\"⑤独自の価値提案\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={uniqueValue}\r\n                    onChange={e => setUniqueValue(e.target.value)}\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item className={classes.glidItemsHorizontal}>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setSolution={setSolution} textClear={textClear}/>\r\n                <FormTextField\r\n                    label=\"⑥ソリューション\"\r\n                    variant=\"filled\"\r\n                    id=\"form-input\"\r\n                    multiline\r\n                    rows={7}\r\n                    fullWidth\r\n                    value={solution}\r\n                    onChange={e => setSolution(e.target.value)}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setChannels={setChannels} textClear={textClear}/>\r\n                <FormTextField\r\n                  label=\"⑦チャネル\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={channels}\r\n                  onChange={e => setChannels(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item className={classes.glidItemsHorizontal}>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setRevenue={setRevenue} textClear={textClear}/>\r\n                <FormTextField\r\n                  label=\"⑧収益の流れ\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={cost}\r\n                  onChange={e => setCost(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setCost={setCost} textClear={textClear}/>\r\n                <FormTextField\r\n                  label=\"⑨コスト構造\"\r\n                  className={classes.margin}\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={revenue}\r\n                  onChange={e => setRevenue(e.target.value)}\r\n                />\r\n              </Grid>\r\n          </Grid>\r\n          <Grid container item className={classes.glidItemsHorizontal}>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setKeyMetrics={setKeyMetrics} textClear={textClear}/>\r\n                <FormTextField\r\n                  label=\"⑩主要指標\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={keyMetrics}\r\n                  onChange={e => setKeyMetrics(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs className={classes.glidItem}>\r\n              <TextClearButtonForTablet setUnfairAdvantage={setUnfairAdvantage} textClear={textClear}/>\r\n                <FormTextField\r\n                  label=\"⑪圧倒的な優位性\"\r\n                  variant=\"filled\"\r\n                  id=\"form-input\"\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  value={unfairAdvantage}\r\n                  onChange={e => setUnfairAdvantage(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default LeanCanvasForTablet;","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\r\n\r\nimport FinishModal from '../FinishModal'\r\nimport PreparationModal from '../PreparationModal'\r\nimport ErrorArrivedModal from '../ErrorArrivedModal'\r\n\r\nimport {quotes} from '../../utilty/randomQuote'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    height: 80,\r\n    width: 80\r\n  },\r\n  icon: {\r\n    height: 35,\r\n    width: 35\r\n  }\r\n}));\r\n\r\nconst SpredSheetButton = withStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 50,\r\n    boxShadow: '0 3px 5px 2px #0c7e46',\r\n    color: theme.palette.getContrastText(\"#0F9D58\"),\r\n    backgroundColor: \"#0F9D58\",\r\n    '&:hover': {\r\n      backgroundColor: \"#0c7e46\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst DownLoadSpredSheetButtonForTabet = (props) => {\r\n  const {\r\n    createLeanCanvas,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  const classes = useStyles();\r\n  const [openPreparationModal, setOpenPreparationModal] = useState(false);\r\n  const [openFinishModal, setOpenFinishModal] = useState(false);\r\n  const [openErrorArrivedModal, setOpenErrorArrivedModal] = useState(false);\r\n\r\n  let [quote, setQuote] = useState(\"\")\r\n  let [byName, setByName] = useState(\"\")\r\n\r\n  const handleOpenPreparationModal = () => {\r\n    displayRandomQuotesAndName ()\r\n    setOpenPreparationModal(true);\r\n    createLeanCanvas();\r\n  };\r\n\r\n  const handleClosePreparationModal = () => {\r\n    setOpenPreparationModal(false);\r\n\r\n  };\r\n\r\n  const handleCloseFinishModal = () => {\r\n    setOpenFinishModal(false);\r\n  };\r\n\r\n  const handleCloseErrorArrivedModal = () => {\r\n    setOpenErrorArrivedModal(false);\r\n  };\r\n\r\n  let randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n\r\n  const displayRandomQuotesAndName = () => {\r\n    setQuote(randomQuote.quote)\r\n    setByName(randomQuote.name)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SpredSheetButton className={classes.button} onClick={handleOpenPreparationModal}>\r\n        <CloudDownloadOutlinedIcon className={classes.icon}/>\r\n      </SpredSheetButton>\r\n      <PreparationModal\r\n        openPreparationModal={openPreparationModal}\r\n        setOpenPreparationModal={setOpenPreparationModal}\r\n        handleClosePreparationModal={handleClosePreparationModal}\r\n        setOpenFinishModal={setOpenFinishModal}\r\n        setOpenErrorArrivedModal={setOpenErrorArrivedModal}\r\n        isArrivedUrl={isArrivedUrl}\r\n        setIsArrivedUrl={setIsArrivedUrl}\r\n        isNotArrivedUrl={isNotArrivedUrl}\r\n        setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        quote={quote}\r\n        byName={byName}\r\n      />\r\n      <FinishModal\r\n        openFinishModal={openFinishModal}\r\n        handleCloseFinishModal={handleCloseFinishModal}\r\n        spredSheetUrl={spredSheetUrl}\r\n      />\r\n      <ErrorArrivedModal\r\n      openErrorArrivedModal={openErrorArrivedModal}\r\n      handleCloseErrorArrivedModal={handleCloseErrorArrivedModal}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DownLoadSpredSheetButtonForTabet;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport DownLoadSpredSheetButtonForTabet from './DownLoadSpredSheetButtonForTabet'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonGroup: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"5%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"fixed\",\r\n    right: 20,\r\n    bottom: 20\r\n  },\r\n  button: {\r\n    flex: \"inherit\",\r\n    margin:\"auto\"\r\n  }\r\n}));\r\n\r\nconst ButtonGroupForTablet = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    createLeanCanvas,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  return (\r\n    <Box className={classes.buttonGroup}  >\r\n      <Box className={classes.button}>\r\n        <DownLoadSpredSheetButtonForTabet\r\n          createLeanCanvas={createLeanCanvas}\r\n          spredSheetUrl={spredSheetUrl}\r\n          isArrivedUrl={isArrivedUrl}\r\n          setIsArrivedUrl={setIsArrivedUrl}\r\n          isNotArrivedUrl={isNotArrivedUrl}\r\n          setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ButtonGroupForTablet;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n      position: 'absolute',\r\n      zIndex: 2,\r\n      right: 0.01,\r\n      padding: 8\r\n    },\r\n}));\r\n\r\nconst TextClearButtonForMobile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //const thisTextClear = props.textClear\r\n  const textClear = () => {\r\n    if (props.setProblem) {props.setProblem(\"\") }\r\n    if (props.setAlternatives) props.setAlternatives(\"\")\r\n    if (props.setCustomer) props.setCustomer(\"\")\r\n    if (props.setEarlyAdopters) props.setEarlyAdopters(\"\")\r\n    if (props.setUniqueValue) props.setUniqueValue(\"\")\r\n    if (props.setSolution) props.setSolution(\"\")\r\n    if (props.setChannels) props.setChannels(\"\")\r\n    if (props.setRevenue) props.setRevenue(\"\")\r\n    if (props.setCost) props.setCost(\"\")\r\n    if (props.setKeyMetrics) props.setKeyMetrics(\"\")\r\n    if (props.setUnfairAdvantage) props.setUnfairAdvantage(\"\")\r\n  }\r\n\r\n  return (\r\n    <IconButton aria-label=\"delete\" size=\"medium\" onClick={textClear} className={classes.fab}>\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default TextClearButtonForMobile;","import React, { useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { fade } from \"@material-ui/core/styles\";\r\n\r\nimport TextClearButtonForMobile from \"./TextClearButtonForMobile\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingBottom: 30,\r\n  },\r\n  container: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"3%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  glidItemsHorizontal: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  glidItem: {\r\n    position: \"relative\",\r\n  },\r\n  gridItemTwoRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  color: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst useStylesForm = makeStyles((theme) => ({\r\n  root: {\r\n    borderTop: \"3px solid #e2e2e1\",\r\n    borderBottom: \"3px solid #e2e2e1\",\r\n    borderLeft: \"3px solid #e2e2e1\",\r\n    borderRight: \"3px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 0,\r\n    backgroundColor: \"#fff\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fafafa\",\r\n      borderColor: \"#c8c8c8\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxshadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px inset`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nconst FormTextField = ({ ...props }) => {\r\n  const classes = useStylesForm();\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n};\r\n\r\nconst LeanCanvasForMobile = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    problem,\r\n    setProblem,\r\n    alternatives,\r\n    setAlternatives,\r\n    customer,\r\n    setCustomer,\r\n    earlyAdopters,\r\n    setEarlyAdopters,\r\n    uniqueValue,\r\n    setUniqueValue,\r\n    solution,\r\n    setSolution,\r\n    channels,\r\n    setChannels,\r\n    revenue,\r\n    setRevenue,\r\n    cost,\r\n    setCost,\r\n    keyMetrics,\r\n    setKeyMetrics,\r\n    unfairAdvantage,\r\n    setUnfairAdvantage,\r\n    textClear,\r\n  } = props;\r\n\r\n  const PLOBLEM_KEY = \"problem\";\r\n  const ALTERNATIVES_KEY = \"alternatives\";\r\n  const CUSTOMER_KEY = \"customer\";\r\n  const EARLYADOPTERS_KEY = \"earlyAdopters\";\r\n  const UNIQUEVALUE_KEY = \"uniqueValue\";\r\n  const SOLUTION_KEY = \"solution\";\r\n  const CHANNELS_KEY = \"channels\";\r\n  const REVENUE_KEY = \"revenue\";\r\n  const COST_KEY = \"cost\";\r\n  const KEYMETRICS_KEY = \"keyMetrics\";\r\n  const UNFAIRADVANTAGE_KEY = \"unfairAdvantage\";\r\n\r\n  const initValue = (key, dispatch) => {\r\n    const initVal = sessionStorage.getItem(key);\r\n    dispatch(initVal ? JSON.parse(initVal) : \"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    initValue(PLOBLEM_KEY, setProblem);\r\n    initValue(ALTERNATIVES_KEY, setAlternatives);\r\n    initValue(CUSTOMER_KEY, setCustomer);\r\n    initValue(EARLYADOPTERS_KEY, setEarlyAdopters);\r\n    initValue(UNIQUEVALUE_KEY, setUniqueValue);\r\n    initValue(SOLUTION_KEY, setSolution);\r\n    initValue(CHANNELS_KEY, setChannels);\r\n    initValue(REVENUE_KEY, setRevenue);\r\n    initValue(COST_KEY, setCost);\r\n    initValue(KEYMETRICS_KEY, setKeyMetrics);\r\n    initValue(UNFAIRADVANTAGE_KEY, setUnfairAdvantage);\r\n  }, [\r\n    setProblem,\r\n    setAlternatives,\r\n    setCustomer,\r\n    setEarlyAdopters,\r\n    setUniqueValue,\r\n    setSolution,\r\n    setChannels,\r\n    setRevenue,\r\n    setCost,\r\n    setKeyMetrics,\r\n    setUnfairAdvantage,\r\n  ]);\r\n\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) {\r\n      sessionStorage[PLOBLEM_KEY] = JSON.stringify(problem);\r\n      sessionStorage[ALTERNATIVES_KEY] = JSON.stringify(alternatives);\r\n      sessionStorage[CUSTOMER_KEY] = JSON.stringify(customer);\r\n      sessionStorage[EARLYADOPTERS_KEY] = JSON.stringify(earlyAdopters);\r\n      sessionStorage[UNIQUEVALUE_KEY] = JSON.stringify(uniqueValue);\r\n      sessionStorage[SOLUTION_KEY] = JSON.stringify(solution);\r\n      sessionStorage[CHANNELS_KEY] = JSON.stringify(channels);\r\n      sessionStorage[REVENUE_KEY] = JSON.stringify(revenue);\r\n      sessionStorage[COST_KEY] = JSON.stringify(cost);\r\n      sessionStorage[KEYMETRICS_KEY] = JSON.stringify(keyMetrics);\r\n      sessionStorage[UNFAIRADVANTAGE_KEY] = JSON.stringify(unfairAdvantage);\r\n    } else {\r\n      mounted.current = true;\r\n    }\r\n  }, [\r\n    problem,\r\n    alternatives,\r\n    customer,\r\n    earlyAdopters,\r\n    uniqueValue,\r\n    solution,\r\n    channels,\r\n    revenue,\r\n    cost,\r\n    keyMetrics,\r\n    unfairAdvantage,\r\n  ]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.container}>\r\n        <Paper elevation={3}>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setProblem={setProblem}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"①課題\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={problem}\r\n              onChange={(e) => setProblem(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setAlternatives={setAlternatives}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"②既存の代替品\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={alternatives}\r\n              onChange={(e) => setAlternatives(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setCustomer={setCustomer}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"③顧客セグメント\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={customer}\r\n              onChange={(e) => setCustomer(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setEarlyAdopters={setEarlyAdopters}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"④アーリーアダプター\"\r\n              className={classes.margin}\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={earlyAdopters}\r\n              onChange={(e) => setEarlyAdopters(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setUniqueValue={setUniqueValue}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"⑤独自の価値提案\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={uniqueValue}\r\n              onChange={(e) => setUniqueValue(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setSolution={setSolution}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"⑥ソリューション\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={solution}\r\n              onChange={(e) => setSolution(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setChannels={setChannels}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"⑦チャネル\"\r\n              className={classes.margin}\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={channels}\r\n              onChange={(e) => setChannels(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setRevenue={setRevenue}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"⑧収益の流れ\"\r\n              className={classes.margin}\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={cost}\r\n              onChange={(e) => setCost(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile setCost={setCost} textClear={textClear} />\r\n            <FormTextField\r\n              label=\"⑨コスト構造\"\r\n              className={classes.margin}\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={revenue}\r\n              onChange={(e) => setRevenue(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setKeyMetrics={setKeyMetrics}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"⑩主要指標\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={keyMetrics}\r\n              onChange={(e) => setKeyMetrics(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs className={classes.glidItem}>\r\n            <TextClearButtonForMobile\r\n              setUnfairAdvantage={setUnfairAdvantage}\r\n              textClear={textClear}\r\n            />\r\n            <FormTextField\r\n              label=\"⑪圧倒的な優位性\"\r\n              variant=\"filled\"\r\n              id=\"form-input\"\r\n              multiline\r\n              rows={7}\r\n              fullWidth\r\n              value={unfairAdvantage}\r\n              onChange={(e) => setUnfairAdvantage(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LeanCanvasForMobile;\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\r\n\r\nimport FinishModal from '../FinishModal'\r\nimport PreparationModal from '../PreparationModal'\r\nimport ErrorArrivedModal from '../ErrorArrivedModal'\r\n\r\nimport {quotes} from '../../utilty/randomQuote'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    height: 80,\r\n    width: 80\r\n  },\r\n  icon: {\r\n    height: 35,\r\n    width: 35\r\n  }\r\n}));\r\n\r\nconst SpredSheetButton = withStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 50,\r\n    boxShadow: '0 3px 5px 2px #0c7e46',\r\n    color: theme.palette.getContrastText(\"#0F9D58\"),\r\n    backgroundColor: \"#0F9D58\",\r\n    '&:hover': {\r\n      backgroundColor: \"#0c7e46\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst DownLoadSpredSheetButtonForMobile = (props) => {\r\n  const {\r\n    createLeanCanvas,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  const classes = useStyles();\r\n  const [openPreparationModal, setOpenPreparationModal] = useState(false);\r\n  const [openFinishModal, setOpenFinishModal] = useState(false);\r\n  const [openErrorArrivedModal, setOpenErrorArrivedModal] = useState(false);\r\n\r\n  let [quote, setQuote] = useState(\"\")\r\n  let [byName, setByName] = useState(\"\")\r\n\r\n  const handleOpenPreparationModal = () => {\r\n    displayRandomQuotesAndName ()\r\n    setOpenPreparationModal(true);\r\n    createLeanCanvas();\r\n  };\r\n\r\n  const handleClosePreparationModal = () => {\r\n    setOpenPreparationModal(false);\r\n  };\r\n\r\n  const handleCloseFinishModal = () => {\r\n    setOpenFinishModal(false);\r\n  };\r\n\r\n  const handleCloseErrorArrivedModal = () => {\r\n    setOpenErrorArrivedModal(false);\r\n  };\r\n\r\n  let randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n\r\n  const displayRandomQuotesAndName = () => {\r\n    setQuote(randomQuote.quote)\r\n    setByName(randomQuote.name)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SpredSheetButton className={classes.button} onClick={handleOpenPreparationModal}>\r\n        <CloudDownloadOutlinedIcon className={classes.icon}/>\r\n      </SpredSheetButton>\r\n      <PreparationModal\r\n        openPreparationModal={openPreparationModal}\r\n        setOpenPreparationModal={setOpenPreparationModal}\r\n        handleClosePreparationModal={handleClosePreparationModal}\r\n        setOpenFinishModal={setOpenFinishModal}\r\n        setOpenErrorArrivedModal={setOpenErrorArrivedModal}\r\n        isArrivedUrl={isArrivedUrl}\r\n        setIsArrivedUrl={setIsArrivedUrl}\r\n        isNotArrivedUrl={isNotArrivedUrl}\r\n        setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        quote={quote}\r\n        byName={byName}\r\n      />\r\n      <FinishModal\r\n        openFinishModal={openFinishModal}\r\n        handleCloseFinishModal={handleCloseFinishModal}\r\n        spredSheetUrl={spredSheetUrl}\r\n      />\r\n      <ErrorArrivedModal\r\n      openErrorArrivedModal={openErrorArrivedModal}\r\n      handleCloseErrorArrivedModal={handleCloseErrorArrivedModal}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DownLoadSpredSheetButtonForMobile;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport DownLoadSpredSheetButtonForMobile from './DownLoadSpredSheetButtonForMobile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonGroup: {\r\n    marginTop: \"3%\",\r\n    marginBottom: \"5%\",\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"fixed\",\r\n    right: 10,\r\n    bottom: 20,\r\n    zIndex: 3\r\n  },\r\n  button: {\r\n    flex: \"inherit\",\r\n    margin:\"auto\"\r\n  }\r\n}));\r\n\r\nconst ButtonGroupForMobile = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    createLeanCanvas,\r\n    spredSheetUrl,\r\n    isArrivedUrl,\r\n    setIsArrivedUrl,\r\n    isNotArrivedUrl,\r\n    setIsNotArrivedUrl\r\n  } = props\r\n\r\n  return (\r\n    <Box className={classes.buttonGroup}  >\r\n      <Box className={classes.button}>\r\n        <DownLoadSpredSheetButtonForMobile\r\n          createLeanCanvas={createLeanCanvas}\r\n          spredSheetUrl={spredSheetUrl}\r\n          isArrivedUrl={isArrivedUrl}\r\n          setIsArrivedUrl={setIsArrivedUrl}\r\n          isNotArrivedUrl={isNotArrivedUrl}\r\n          setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ButtonGroupForMobile;","import { createContext } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nexport default AppContext","export const ALL_TEXT_CLEAR = 'ALL_TEXT_CLEAR'\r\nexport const TEXT_CLEAR = 'TEXT_CLEAR'\r\nexport const CREATE_LEAN_CANVAS = 'CREATE_LEAN_CANVAS'\r\n","import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport axios from \"axios\";\r\n\r\nimport LeanCanvasForDesktop from \"./ForDesktop/LeanCanvasForDesktop\";\r\nimport ButtonGroupForDesktop from \"./ForDesktop/ButtonGroupForDesktop\";\r\nimport LeanCanvasForLaptop from \"./ForLaptop/LeanCanvasForLaptop\";\r\nimport ButtonGroupForLaptop from \"./ForLaptop/ButtonGroupForLaptop\";\r\nimport LeanCanvasForTablet from \"./ForTablet/LeanCanvasForTablet\";\r\nimport ButtonGroupForTablet from \"./ForTablet/ButtonGroupForTablet\";\r\nimport LeanCanvasForMobile from \"./ForMobile/LeanCanvasForMobile\";\r\nimport ButtonGroupForMobile from \"./ForMobile/ButtonGroupForMobile\";\r\n\r\nimport AppContext from \"../contexts/AppContext\";\r\nimport { ALL_TEXT_CLEAR, CREATE_LEAN_CANVAS, TEXT_CLEAR } from \"../actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n    minHeight: \"100vh\",\r\n    position: \"relative\",\r\n    paddingBottom: 25,\r\n    boxSizing: \"border-box\",\r\n  },\r\n  desktop: {\r\n    marginTop: 40,\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  laptop: {\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  tablet: {\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n  mobile: {\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n});\r\n\r\nconst Main = () => {\r\n  // require('dotenv').config();\r\n  useEffect(() => {\r\n    console.log(window.location.href);\r\n    const domein = document.domain;\r\n    const REACT_APP_HEROKU_DOMEIN = process.env.REACT_APP_HEROKU_DOMEIN;\r\n    const REACT_APP_ORIGINAL_URL = process.env.REACT_APP_ORIGINAL_URL;\r\n    const REACT_APP_INSECURE_URL = process.env.REACT_APP_INSECURE_URL;\r\n    if (\r\n      window.location.href === REACT_APP_INSECURE_URL ||\r\n      domein === REACT_APP_HEROKU_DOMEIN\r\n    )\r\n      window.location.href = REACT_APP_ORIGINAL_URL;\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [alternatives, setAlternatives] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [earlyAdopters, setEarlyAdopters] = useState(\"\");\r\n  const [uniqueValue, setUniqueValue] = useState(\"\");\r\n  const [solution, setSolution] = useState(\"\");\r\n  const [channels, setChannels] = useState(\"\");\r\n  const [revenue, setRevenue] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n  const [keyMetrics, setKeyMetrics] = useState(\"\");\r\n  const [unfairAdvantage, setUnfairAdvantage] = useState(\"\");\r\n\r\n  const [spredSheetUrl, setSpredSheetUrl] = useState(\"\");\r\n  const [isArrivedUrl, setIsArrivedUrl] = useState(false);\r\n  const [isNotArrivedUrl, setIsNotArrivedUrl] = useState(false);\r\n\r\n  const isFirstRender = useRef(false);\r\n\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\r\n  const isLaptop = useMediaQuery({ minWidth: 1076, maxWidth: 1279 });\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1075 });\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n\r\n  // require('dotenv').config();\r\n  const REACT_APP_API_URL_EXPORT = process.env.REACT_APP_API_URL_EXPORT;\r\n  const createLeanCanvas = (e) => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n    } else {\r\n      dispatch({\r\n        type: CREATE_LEAN_CANVAS,\r\n        problem,\r\n        alternatives,\r\n        customer,\r\n        earlyAdopters,\r\n        uniqueValue,\r\n        solution,\r\n        channels,\r\n        revenue,\r\n        cost,\r\n        keyMetrics,\r\n        unfairAdvantage,\r\n      });\r\n      axios({\r\n        method: \"POST\",\r\n        url: REACT_APP_API_URL_EXPORT,\r\n        data: {\r\n          problem: problem,\r\n          alternatives: alternatives,\r\n          customer: customer,\r\n          earlyAdopters: earlyAdopters,\r\n          uniqueValue: uniqueValue,\r\n          solution: solution,\r\n          channels: channels,\r\n          revenue: revenue,\r\n          cost: cost,\r\n          keyMetrics: keyMetrics,\r\n          unfairAdvantage: unfairAdvantage,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setSpredSheetUrl(\r\n            `https://docs.google.com/spreadsheets/d/${response.data}/edit`\r\n          );\r\n          setIsArrivedUrl(true);\r\n          // console.log(\"成功\")\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error)\r\n          // console.log(\"失敗\")\r\n          // console.log(REACT_APP_API_URL)\r\n          setIsNotArrivedUrl(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const allTextClear = (e) => {\r\n    dispatch({\r\n      type: ALL_TEXT_CLEAR,\r\n    });\r\n  };\r\n\r\n  const textClear = (e) => {\r\n    const id = e.id;\r\n    dispatch({\r\n      type: TEXT_CLEAR,\r\n      id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isDesktop ? (\r\n        <Box className={classes.desktop}>\r\n          <LeanCanvasForDesktop\r\n            problem={problem}\r\n            setProblem={setProblem}\r\n            alternatives={alternatives}\r\n            setAlternatives={setAlternatives}\r\n            customer={customer}\r\n            setCustomer={setCustomer}\r\n            earlyAdopters={earlyAdopters}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            uniqueValue={uniqueValue}\r\n            setUniqueValue={setUniqueValue}\r\n            solution={solution}\r\n            setSolution={setSolution}\r\n            channels={channels}\r\n            setChannels={setChannels}\r\n            revenue={revenue}\r\n            setRevenue={setRevenue}\r\n            cost={cost}\r\n            setCost={setCost}\r\n            keyMetrics={keyMetrics}\r\n            setKeyMetrics={setKeyMetrics}\r\n            unfairAdvantage={unfairAdvantage}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n          />\r\n          <ButtonGroupForDesktop\r\n            createLeanCanvas={createLeanCanvas}\r\n            allTextClear={allTextClear}\r\n            setProblem={setProblem}\r\n            setAlternatives={setAlternatives}\r\n            setCustomer={setCustomer}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            setUniqueValue={setUniqueValue}\r\n            setSolution={setSolution}\r\n            setChannels={setChannels}\r\n            setRevenue={setRevenue}\r\n            setCost={setCost}\r\n            setKeyMetrics={setKeyMetrics}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n            spredSheetUrl={spredSheetUrl}\r\n            isArrivedUrl={isArrivedUrl}\r\n            setIsArrivedUrl={setIsArrivedUrl}\r\n            isNotArrivedUrl={isNotArrivedUrl}\r\n            setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n          />\r\n        </Box>\r\n      ) : null}\r\n      {isLaptop ? (\r\n        <Box className={classes.laptop}>\r\n          <LeanCanvasForLaptop\r\n            problem={problem}\r\n            setProblem={setProblem}\r\n            alternatives={alternatives}\r\n            setAlternatives={setAlternatives}\r\n            customer={customer}\r\n            setCustomer={setCustomer}\r\n            earlyAdopters={earlyAdopters}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            uniqueValue={uniqueValue}\r\n            setUniqueValue={setUniqueValue}\r\n            solution={solution}\r\n            setSolution={setSolution}\r\n            channels={channels}\r\n            setChannels={setChannels}\r\n            revenue={revenue}\r\n            setRevenue={setRevenue}\r\n            cost={cost}\r\n            setCost={setCost}\r\n            keyMetrics={keyMetrics}\r\n            setKeyMetrics={setKeyMetrics}\r\n            unfairAdvantage={unfairAdvantage}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n          />\r\n          <ButtonGroupForLaptop\r\n            createLeanCanvas={createLeanCanvas}\r\n            allTextClear={allTextClear}\r\n            setProblem={setProblem}\r\n            setAlternatives={setAlternatives}\r\n            setCustomer={setCustomer}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            setUniqueValue={setUniqueValue}\r\n            setSolution={setSolution}\r\n            setChannels={setChannels}\r\n            setRevenue={setRevenue}\r\n            setCost={setCost}\r\n            setKeyMetrics={setKeyMetrics}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n            spredSheetUrl={spredSheetUrl}\r\n            isArrivedUrl={isArrivedUrl}\r\n            setIsArrivedUrl={setIsArrivedUrl}\r\n            isNotArrivedUrl={isNotArrivedUrl}\r\n            setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n          />\r\n        </Box>\r\n      ) : null}\r\n      {isTablet ? (\r\n        <Box className={classes.tablet}>\r\n          <LeanCanvasForTablet\r\n            problem={problem}\r\n            setProblem={setProblem}\r\n            alternatives={alternatives}\r\n            setAlternatives={setAlternatives}\r\n            customer={customer}\r\n            setCustomer={setCustomer}\r\n            earlyAdopters={earlyAdopters}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            uniqueValue={uniqueValue}\r\n            setUniqueValue={setUniqueValue}\r\n            solution={solution}\r\n            setSolution={setSolution}\r\n            channels={channels}\r\n            setChannels={setChannels}\r\n            revenue={revenue}\r\n            setRevenue={setRevenue}\r\n            cost={cost}\r\n            setCost={setCost}\r\n            keyMetrics={keyMetrics}\r\n            setKeyMetrics={setKeyMetrics}\r\n            unfairAdvantage={unfairAdvantage}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n            textClear={textClear}\r\n          />\r\n          <ButtonGroupForTablet\r\n            createLeanCanvas={createLeanCanvas}\r\n            setProblem={setProblem}\r\n            setAlternatives={setAlternatives}\r\n            setCustomer={setCustomer}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            setUniqueValue={setUniqueValue}\r\n            setSolution={setSolution}\r\n            setChannels={setChannels}\r\n            setRevenue={setRevenue}\r\n            setCost={setCost}\r\n            setKeyMetrics={setKeyMetrics}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n            spredSheetUrl={spredSheetUrl}\r\n            isArrivedUrl={isArrivedUrl}\r\n            setIsArrivedUrl={setIsArrivedUrl}\r\n            isNotArrivedUrl={isNotArrivedUrl}\r\n            setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n          />\r\n        </Box>\r\n      ) : null}\r\n      {isMobile ? (\r\n        <Box className={classes.mobile}>\r\n          <LeanCanvasForMobile\r\n            problem={problem}\r\n            setProblem={setProblem}\r\n            alternatives={alternatives}\r\n            setAlternatives={setAlternatives}\r\n            customer={customer}\r\n            setCustomer={setCustomer}\r\n            earlyAdopters={earlyAdopters}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            uniqueValue={uniqueValue}\r\n            setUniqueValue={setUniqueValue}\r\n            solution={solution}\r\n            setSolution={setSolution}\r\n            channels={channels}\r\n            setChannels={setChannels}\r\n            revenue={revenue}\r\n            setRevenue={setRevenue}\r\n            cost={cost}\r\n            setCost={setCost}\r\n            keyMetrics={keyMetrics}\r\n            setKeyMetrics={setKeyMetrics}\r\n            unfairAdvantage={unfairAdvantage}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n            textClear={textClear}\r\n          />\r\n          <ButtonGroupForMobile\r\n            createLeanCanvas={createLeanCanvas}\r\n            setProblem={setProblem}\r\n            setAlternatives={setAlternatives}\r\n            setCustomer={setCustomer}\r\n            setEarlyAdopters={setEarlyAdopters}\r\n            setUniqueValue={setUniqueValue}\r\n            setSolution={setSolution}\r\n            setChannels={setChannels}\r\n            setRevenue={setRevenue}\r\n            setCost={setCost}\r\n            setKeyMetrics={setKeyMetrics}\r\n            setUnfairAdvantage={setUnfairAdvantage}\r\n            spredSheetUrl={spredSheetUrl}\r\n            isArrivedUrl={isArrivedUrl}\r\n            setIsArrivedUrl={setIsArrivedUrl}\r\n            isNotArrivedUrl={isNotArrivedUrl}\r\n            setIsNotArrivedUrl={setIsNotArrivedUrl}\r\n          />\r\n        </Box>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  footer: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n    color: \"#b6b6b3\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  footerItem: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    marginRight: 40,\r\n    marginLeft: 40,\r\n  },\r\n});\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.footer} display=\"flex\" flexDirection=\"row\">\r\n      <Box className={classes.footerItem} fontWeight=\"fontWeightSmall\" m={1}>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          Copyright © 2020 YourIdea Inc.\r\n        </Typography>\r\n      </Box>\r\n      <Box className={classes.footerItem} fontWeight=\"fontWeightSmall\" m={1}>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          <Link\r\n            to=\"/terms-of-service\"\r\n            color=\"inherit\"\r\n            style={{ color: \"#424242\", textDecoration: \"none\" }}\r\n          >\r\n            利用規約\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n      <Box className={classes.footerItem} fontWeight=\"fontWeightSmall\" m={1}>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          <Link\r\n            to=\"/privacy-policy\"\r\n            color=\"inherit\"\r\n            style={{ color: \"#424242\", textDecoration: \"none\" }}\r\n          >\r\n            プライバシーポリシー\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { Link } from \"react-router-dom\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 600,\n  },\n  container: {\n    margin: \"auto\",\n    padding: 50,\n  },\n  card: {\n    maxWidth: 400,\n    textAlign: \"center\",\n    alignContent: \"center\",\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst Page404 = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.container}>\n        <Card className={classes.card}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image=\"https://www.yourleancanvas.com/src/image/404.png\"\n              alt=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                ページが見つかりませんでした。\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <Box\n            style={{\n              textAlign: \"center\",\n              paddingTop: 25,\n              paddingBottom: 25,\n              alignContent: \"center\",\n            }}\n          >\n            <Link to=\"/\">\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\n                TOPに戻る\n              </Typography>\n            </Link>\n          </Box>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Page404;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport LinkMaterial from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 600,\n    flex: 1,\n  },\n  container: {\n    margin: \"auto\",\n    padding: 20,\n  },\n  paper: {\n    padding: 30,\n    maxWidth: 400,\n    textAlign: \"center\",\n    alignContent: \"center\",\n  },\n  itemParent: {\n    margin: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    flex: 1,\n  },\n  title: {\n    margin: \"auto\",\n    padding: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    textAlign: \"center\",\n  },\n});\n\nexport default function PrivacyPolicy() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.container}>\n        <Paper elevation={2}>\n          <Box className={classes.itemParent}>\n            <Box className={classes.title}>\n              <Typography variant=\"h6\" gutterBottom>\n                プライバシーポリシー\n              </Typography>\n            </Box>\n            <Box>\n              <Typography gutterBottom variant=\"body1\">\n                【YourIdea】（以下「本サービス」といいます。）における、ユーザーについての個人情報を含む利用者情報の取扱いについて、以下のとおりプライバシーポリシー（以下「本ポリシー」といいます。）を定めます。\n                <br />\n                <br />\n                1. 収集する利用者情報及び収集方法\n                <br />\n                <br />\n                本ポリシーにおいて、「利用者情報」とは、ユーザーの識別に係る情報、通信サービス上の行動履歴、その他ユーザーまたはユーザーの端末に関連して生成または蓄積された情報であって、本ポリシーに基づき本サービスが収集するものを意味するものとします。\n                <br />\n                本サービスにおいて本サービスが収集する利用者情報は、その収集方法に応じて、以下のようなものとなります。\n                <br />\n                <br />\n                ユーザーからご提供いただく情報本サービスを利用するために、または本サービスの利用を通じてユーザーからご提供いただく情報は以下のとおりです。\n                <br />\n                ・入力フォームその他本サービスが定める方法を通じてユーザーが入力または送信する情報\n                <br />\n                <br />\n                ユーザーが本サービスの利用において、他のサービスと連携を許可することにより、当該他のサービスからご提供いただく情報ユーザーが、本サービスを利用するにあたり、ソーシャルネットワーキングサービス等の他のサービスとの連携を許可した場合には、その許可の際にご同意いただいた内容に基づき、以下の情報を当該外部サービスから収集します。\n                <br />\n                ・当該外部サービスでユーザーが利用するID\n                <br />\n                ・その他当該外部サービスのプライバシー設定によりユーザーが連携先に開示を認めた情報\n                <br />\n                <br />\n                ユーザーが本サービスを利用するにあたって、本サービスが収集する情報本サービスは、本サービスへのアクセス状況やそのご利用方法に関する情報を収集することがあります。これには以下の情報が含まれます。\n                <br />\n                ・リファラ ・IPアドレス ・サーバーアクセスログに関する情報\n                <br />\n                ・Cookie、ADID、IDFAその他の識別子 (4)\n                <br />\n                <br />\n                2. 利用目的\n                <br />\n                <br />\n                本サービスのサービス提供にかかわる利用者情報の具体的な利用目的は以下のとおりです。\n                <br />\n                <br />\n                (1) ユーザーのトラフィック測定及び行動測定のため\n                <br />\n                (2)広告の配信、表示及び効果測定のため\n                <br />\n                (3)本サービスに関するご案内、お問い合わせ等への対応のため\n                <br />\n                (4)本サービスに関する本サービスの規約、ポリシー等（以下「規約等」といいます。）に違反する行為に対する対応のため\n                <br />\n                <br />\n                3. 通知・公表または同意取得の方法、利用中止要請の方法\n                <br />\n                <br /> 3-1\n                ユーザーは、お問い合わせから、利用者情報の全部または一部についてその収集又は利用の停止を求めることができ、この場合、本サービスは速やかに、本サービスの定めるところに従い、その利用を停止します。\n                <br />\n                <br />\n                4. 外部送信、第三者提供、情報収集モジュールの有無\n                <br />\n                <br />\n                4-1\n                本サービスでは、以下の提携先が、ユーザーの端末にCookieを保存し、これを利用して利用者情報を蓄積及び利用している場合があります。\n                <br />\n                4-2\n                本サービスには以下の情報収集モジュールが組み込まれています。これに伴い、以下のとおり情報収集モジュール提供者（日本国外にある者を含みます。）への利用者情報の提供を行います。\n                <br />\n                <br />\n                5. 第三者提供\n                <br />\n                <br />\n                本サービスは、利用者情報のうち、個人情報については、あらかじめユーザーの同意を得ないで、第三者（日本国外にある者を含みます。）に提供しません。但し、次に掲げる必要があり第三者（日本国外にある者を含みます。）に提供する場合はこの限りではありません。\n                <br />\n                <br />\n                (1)\n                本サービスが利用目的の達成に必要な範囲内において個人情報の取扱いの全部または一部を委託する場合\n                <br />\n                (2)\n                合併その他の事由による事業の承継に伴って個人情報が提供される場合\n                <br />\n                (3)\n                第4項の定めに従って、提携先または情報収集モジュール提供者へ個人情報が提供される場合\n                <br />\n                (4)\n                国の機関もしくは地方公共団体またはその委託を受けた者が法令の定める事務を遂行することに対して協力する必要がある場合であって、ユーザーの同意を得ることによって当該事務の遂行に支障を及ぼすおそれがある場合\n                <br />\n                (5)\n                その他、個人情報の保護に関する法律（以下「個人情報保護法」といいます。）その他の法令で認められる場合\n                <br />\n                <br />\n                6.個人情報の開示\n                <br />\n                <br />\n                本サービスは、ユーザーから、個人情報保護法の定めに基づき個人情報の開示を求められたときは、ユーザーご本人からのご請求であることを確認の上で、ユーザーに対し、遅滞なく開示を行います（当該個人情報が存在しないときにはその旨を通知いたします。）。但し、個人情報保護法その他の法令により、本サービスが開示の義務を負わない場合は、この限りではありません。なお、個人情報の開示につきましては、手数料（1件あたり1,000円）を頂戴しておりますので、あらかじめ御了承ください。\n                <br />\n                <br />\n                7. 個人情報の訂正及び利用停止等\n                <br />\n                <br />\n                7-1\n                本サービスは、ユーザーから、(1)個人情報が真実でないという理由によって個人情報保護法の定めに基づきその内容の訂正を求められた場合、及び(2)あらかじめ公表された利用目的の範囲を超えて取扱われているという理由または偽りその他不正の手段により収集されたものであるという理由により、個人情報保護法の定めに基づきその利用の停止を求められた場合には、ユーザーご本人からのご請求であることを確認の上で遅滞なく必要な調査を行い、その結果に基づき、個人情報の内容の訂正または利用停止を行い、その旨をユーザーに通知します。なお、訂正または利用停止を行わない旨の決定をしたときは、ユーザーに対しその旨を通知いたします。\n                <br />\n                7-2本サービスは、ユーザーから、ユーザーの個人情報について消去を求められた場合、本サービスが当該請求に応じる必要があると判断した場合は、ユーザーご本人からのご請求であることを確認の上で、個人情報の消去を行い、その旨をユーザーに通知します。\n                <br />\n                7-3個人情報保護法その他の法令により、本サービスが訂正等または利用停止等の義務を負わない場合は、7-1および7-2の規定は適用されません。\n                <br />\n                <br />\n                8. お問い合わせ窓口\n                <br />\n                <br />\n                ご意見、ご質問、苦情のお申出その他利用者情報の取扱いに関するお問い合わせは、下記の窓口までお願いいたします。\n                <br />\n                <LinkMaterial href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7OPuPm5wf8JXR-7JzePA5BYbzoJ_z9IYjGM5TpcWllyqlEA/viewform\">\n                  お問い合わせはこちらから\n                </LinkMaterial>\n                <br />\n                <br />\n                プライバシーポリシーの変更手続\n                <br />\n                <br />\n                本サービスは、必要に応じて、本ポリシーを変更します。但し、法令上ユーザーの同意が必要となるような本ポリシーの変更を行う場合、変更後の本ポリシーは、本サービス所定の方法で変更に同意したユーザーに対してのみ適用されるものとします。なお、本サービスは、本ポリシーを変更する場合には、変更後の本ポリシーの施行時期及び内容を本サービスのウェブサイト上での表示その他の適切な方法により周知します。\n                <br />\n                <br />\n              </Typography>\n            </Box>\n            <Box className={classes.title}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                【2021年03月06日制定】\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 600,\n    flex: 1,\n  },\n  container: {\n    margin: \"auto\",\n    padding: 20,\n  },\n  paper: {\n    padding: 30,\n    maxWidth: 400,\n    textAlign: \"center\",\n    alignContent: \"center\",\n  },\n  itemParent: {\n    margin: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    flex: 1,\n  },\n  title: {\n    margin: \"auto\",\n    padding: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    textAlign: \"center\",\n  },\n});\n\nexport default function TermsOfService() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.container}>\n        <Paper elevation={2}>\n          <Box className={classes.itemParent}>\n            <Box className={classes.title}>\n              <Typography variant=\"h6\" gutterBottom>\n                利用規約\n              </Typography>\n            </Box>\n            <Box>\n              <Typography gutterBottom variant=\"body1\">\n                本利用規約（以下「本規約」と言います。）には、本サービスの提供条件及び当社と本サービス利用者の皆様との間の権利義務関係が定められています。本サービスの利用に際しては、本規約の全文をお読みいただいたうえで、本規約に同意いただく必要があります。\n                <br />\n                <br />\n                第1条（適用）\n                <br />\n                <br />\n                1.\n                本規約は、本サービスの提供条件及び本サービスの利用に関する当社と本サービス利用者との間の権利義務関係を定めることを目的とし、本サービス利用者と当社との間の本サービスの利用に関わる一切の関係に適用されます。\n                <br />\n                <br />\n                第2条（定義）\n                <br />\n                <br />\n                本規約において使用する以下の用語は、各々以下に定める意味を有するものとします。\n                <br />\n                <br />\n                (1)\n                「サービス利用契約」とは、本規約を契約条件として当社と本サービス利用者の間で締結される、本サービスの利用契約を意味します。\n                <br />\n                (2)\n                「知的財産権」とは、著作権、特許権、実用新案権、意匠権、商標権その他の知的財産権（それらの権利を取得し、またはそれらの権利につき登録等を出願する権利を含みます。）を意味します。\n                <br />\n                (3)\n                「投稿データ」とは、本サービス利用者が本サービスを利用して投稿その他送信するコンテンツ（文章、画像、動画その他のデータを含みますがこれらに限りません。）を意味します。\n                <br />\n                (4)\n                「当社」とは、本サービス【YourIdea】を運営する個人を意味します。\n                <br />\n                (5)\n                「本サービス」とは、当社が提供する【YourIdea】という名称のサービス（理由の如何を問わずサービスの名称または内容が変更された場合は、当該変更後のサービスを含みます。）を意味します。\n                <br />\n                <br />\n                第4条（禁止事項）\n                <br />\n                <br />\n                本サービス利用者は、本サービスの利用にあたり、以下の各号のいずれかに該当する行為または該当すると当社が判断する行為をしてはなりません。\n                <br />\n                <br />\n                (1) 法令に違反する行為または犯罪行為に関連する行為\n                <br />\n                (2)\n                当社、本サービスの他の利用者またはその他の第三者に対する詐欺または脅迫行為\n                <br />\n                (3) 公序良俗に反する行為\n                <br />\n                (4)\n                当社、本サービスの他の利用者またはその他の第三者の知的財産権、肖像権、プライバシーの権利、名誉、その他の権利または利益を侵害する行為\n                <br />\n                (5)\n                本サービスを通じ、以下に該当し、または該当すると当社が判断する情報を当社または本サービスの他の利用者に送信すること\n                ・過度に暴力的または残虐な表現を含む情報\n                ・コンピューター・ウィルスその他の有害なコンピューター・プログラムを含む情報\n                ・当社、本サービスの他の利用者またはその他の第三者の名誉または信用を毀損する表現を含む情報\n                ・過度にわいせつな表現を含む情報 ・差別を助長する表現を含む情報\n                ・自殺、自傷行為を助長する表現を含む情報\n                ・薬物の不適切な利用を助長する表現を含む情報\n                ・反社会的な表現を含む情報\n                ・チェーンメール等の第三者への情報の拡散を求める情報\n                ・他人に不快感を与える表現を含む情報\n                <br />\n                (6)\n                本サービスのネットワークまたはシステム等に過度な負荷をかける行為\n                <br />\n                (7)\n                当社が提供するソフトウェアその他のシステムに対するリバースエンジニアリングその他の解析行為\n                <br />\n                (8) 本サービスの運営を妨害するおそれのある行為\n                <br />\n                (9) 当社のネットワークまたはシステム等への不正アクセス\n                <br />\n                (10) 第三者に成りすます行為\n                <br />\n                (11) 本サービスの他の利用者のIDまたはパスワードを利用する行為\n                <br />\n                (12)\n                当社が事前に許諾しない本サービス上での宣伝、広告、勧誘、または営業行為\n                <br />\n                (13) 本サービスの他の利用者の情報の収集\n                <br />\n                (14)\n                当社、本サービスの他の利用者またはその他の第三者に不利益、損害、不快感を与える行為\n                <br />\n                (15) 反社会的勢力等への利益供与\n                <br />\n                (16) 面識のない異性との出会いを目的とした行為\n                <br />\n                (17) 前各号の行為を直接または間接に惹起し、または容易にする行為\n                <br />\n                (18) 前各号の行為を試みること\n                <br />\n                (19) その他、当社が不適切と判断する行為\n                <br />\n                <br />\n                第5条（本サービスの停止等）\n                <br />\n                <br />\n                当社は、以下のいずれかに該当する場合には、本サービスに事前に通知することなく、本サービスの全部または一部の提供を停止または中断することができるものとします。\n                <br />\n                <br />\n                (1)\n                本サービスに係るコンピューター・システムの点検または保守作業を緊急に行う場合\n                <br />\n                (2)\n                コンピューター、通信回線等の障害、誤操作、過度なアクセスの集中、不正アクセス、ハッキング等により本サービスの運営ができなくなった場合\n                <br />\n                (3)\n                地震、落雷、火災、風水害、停電、天災地変などの不可抗力により本サービスの運営ができなくなった場合\n                <br />\n                (4) その他、当社が停止または中断を必要と判断した場合\n                <br />\n                第6条（権利帰属）\n                <br />\n                <br />\n                1.\n                本サービスに関する知的財産権は全て当社または当社にライセンスを許諾している者に帰属しており、本規約に基づく本サービスの利用許諾は、本サービスに関する当社または当社にライセンスを許諾している者の知的財産権の使用許諾を意味するものではありません。\n                <br />\n                2.\n                本サービス利用者は、投稿データについて、自らが投稿その他送信することについての適法な権利を有していること、及び投稿データが第三者の権利を侵害していないことについて、当社に対し表明し、保証するものとします。\n                <br />\n                3.\n                本サービス利用者は、投稿データについて、当社に対し、世界的、非独占的、無償、サブライセンス可能かつ譲渡可能な使用、複製、配布、派生著作物の作成、表示及び実行に関するライセンスを付与します。また、他の本サービス利用者に対しても、本サービスを利用して本サービス利用者が投稿その他送信した投稿データの使用、複製、配布、派生著作物を作成、表示及び実行することについての非独占的なライセンスを付与します。\n                <br />\n                4.\n                本サービス利用者は、当社及び当社から権利を承継しまたは許諾された者に対して著作者人格権を行使しないことに同意するものとします。\n                <br />\n                <br />\n                第7条（本サービスの内容の変更、終了）\n                <br />\n                <br />\n                当社は、当社の都合により、本サービスの内容を変更し、または提供を終了することができます。\n                <br />\n                <br />\n                第8条（保証の否認及び免責）\n                <br />\n                <br />\n                1.\n                当社は、本サービスが本サービス利用者の特定の目的に適合すること、期待する機能・商品的価値・正確性・有用性を有すること、本サービス利用者による本サービスの利用が本サービス利用者に適用のある法令または業界団体の内部規則等に適合すること、継続的に利用できること、及び不具合が生じないことについて、明示又は黙示を問わず何ら保証するものではありません。\n                <br />\n                2.\n                当社は、本サービスに関して本サービス利用者が被った損害につき、過去【12ヶ月】間に本サービス利用者が当社に支払った対価の金額を超えて賠償する責任を負わないものとし、また、付随的損害、間接損害、特別損害、将来の損害及び逸失利益にかかる損害については、賠償する責任を負わないものとします。\n                <br />\n                3.\n                本サービスに関連して本サービス利用者と他の本サービス利用者または第三者との間において生じた取引、連絡、紛争等については、本サービス利用者が自己の責任によって解決するものとします。\n                <br />\n                <br />\n                第9条（秘密保持）\n                <br />\n                <br />\n                本サービス利用者は、本サービスに関連して当社が本サービス利用者に対して秘密に取扱うことを求めて開示した非公知の情報について、当社の事前の書面による承諾がある場合を除き、秘密に取扱うものとします。\n                <br />\n                <br />\n                第10条（利用者情報の取扱い）\n                <br />\n                <br />\n                1.\n                当社による本サービス利用者の利用者情報の取扱いについては、別途当社\n                <Link\n                  to=\"/privacy-policy\"\n                  color=\"inherit\"\n                  style={{ color: \"#424242\" }}\n                >\n                  プライバシーポリシー\n                </Link>\n                の定めによるものとし、本サービス利用者はこのプライバシーポリシーに従って当社が本サービス利用者の利用者情報を取扱うことについて同意するものとします。\n                <br />\n                2.\n                当社は、本サービス利用者が当社に提供した情報、データ等を、個人を特定できない形での統計的な情報として、当社の裁量で、利用及び公開することができるものとし、本サービス利用者はこれに異議を唱えないものとします。\n                <br />\n                <br />\n                第11条（本規約等の変更）\n                <br />\n                <br />\n                当社は、当社が必要と認めた場合は、本規約を変更できるものとします。本規約を変更する場合、変更後の本規約の施行時期及び内容を当社本サービス上での掲示その他の適切な方法により周知し、または本サービス利用者に通知します。但し、法令上本サービス利用者の同意が必要となるような内容の変更の場合は、当社所定の方法で本サービス利用者の同意を得るものとします。\n                <br />\n                <br />\n                第12条（連絡／通知） <br />\n                <br />\n                <br />\n                1.\n                本サービスに関する問い合わせその他本サービス利用者から当社に対する連絡または通知、及び本規約の変更に関する通知その他当社から本サービス利用者に対する連絡または通知は、当社の定める方法で行うものとします。\n                <br />\n                2.\n                当社が提供されたメールアドレスの連絡先に連絡または通知を行った場合、本サービス利用者は当該連絡または通知を受領したものとみなします。\n                <br />\n                <br />\n                第13条（サービス利用契約上の地位の譲渡等）\n                <br />\n                <br />\n                1.\n                本サービス利用者は、当社の書面による事前の承諾なく、利用契約上の地位または本規約に基づく権利もしくは義務につき、第三者に対し、譲渡、移転、担保設定、その他の処分をすることはできません。\n                <br />\n                2.\n                当社は本サービスにかかる事業を他社に譲渡した場合には、当該事業譲渡に伴い利用契約上の地位、本規約に基づく権利及び義務並びに本サービス利用者の登録事項その他の顧客情報を当該事業譲渡の譲受人に譲渡することができるものとし、本サービス利用者は、かかる譲渡につき本項において予め同意したものとします。なお、本項に定める事業譲渡には、通常の事業譲渡のみならず、会社分割その他事業が移転するあらゆる場合を含むものとします。\n                <br />\n                <br />\n                第14条（分離可能性）\n                <br />\n                <br />\n                本規約のいずれかの条項またはその一部が、消費者契約法その他の法令等により無効または執行不能と判断された場合であっても、本規約の残りの規定及び一部が無効または執行不能と判断された規定の残りの部分は、継続して完全に効力を有するものとします。\n                <br />\n                <br />\n                第15条（準拠法及び管轄裁判所）\n                <br />\n                <br />\n                1. 本規約及びサービス利用契約の準拠法は日本法とします。\n                <br />\n                2.\n                本規約またはサービス利用契約に起因し、または関連する一切の紛争については、東京地方裁判所を第一審の専属的合意管轄裁判所とします。\n                <br />\n              </Typography>\n            </Box>\n            <Box className={classes.title}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                【2021年03月06日制定】\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Box>\n  );\n}\n","import {\r\n  CREATE_LEAN_CANVAS,\r\n  ALL_TEXT_CLEAR,\r\n  TEXT_CLEAR\r\n} from \"../actions\"\r\n\r\nconst operationLeanCanvasContents = (state = [], action) => {\r\n  switch (action.type) {\r\n    case CREATE_LEAN_CANVAS:\r\n      const contents = {\r\n        problem: action.problem,\r\n        alternatives: action.alternatives,\r\n        customer: action.customer,\r\n        earlyAdopters: action.earlyAdopters,\r\n        uniqueValue: action.uniqueValue,\r\n        solution: action.solution,\r\n        channels: action.channels,\r\n        revenue: action.revenue,\r\n        cost: action.cost,\r\n        keyMetrics: action.keyMetrics,\r\n        unfairAdvantage: action.unfairAdvantage,\r\n  }\r\n      return [contents]\r\n    case TEXT_CLEAR:\r\n      return state.filter(event => event.id !== action.id)\r\n    case ALL_TEXT_CLEAR:\r\n      return []\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default operationLeanCanvasContents","\r\nimport operationLeanCanvasContents from './LeanCanvasContentReducer'\r\nexport default operationLeanCanvasContents","import React, { useEffect, useReducer } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Page404 from \"../pages/Page404\";\nimport PrivacyPolicy from \"../pages/PrivacyPolicy\";\nimport TermsOfService from \"../pages/TermsOfService\";\n\nimport reducer from \"../reducers/index\";\nimport AppContext from \"../contexts/AppContext\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n});\n\nconst APP_KEY = \"appWithRedux\";\n\nconst App = () => {\n  const classes = useStyles();\n  const appState = sessionStorage.getItem(APP_KEY);\n  const initialState = appState\n    ? JSON.parse(appState)\n    : {\n        contens: [],\n      };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    sessionStorage.setItem(APP_KEY, JSON.stringify(state));\n  }, [state]);\n  return (\n    <BrowserRouter>\n      <AppContext.Provider value={{ state, dispatch }}>\n        <div className={classes.root}>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/privacy-policy\" exact>\n              <PrivacyPolicy />\n            </Route>\n            <Route path=\"/terms-of-service\" exact>\n              <TermsOfService />\n            </Route>\n            <Route component={Page404} />\n          </Switch>\n          <Footer />\n        </div>\n      </AppContext.Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n     <style>{`\n         body{\n             margin: 0px;\n             padding: 0px;\n             padding-right: 0px !important;\n         }\n        `}</style>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}